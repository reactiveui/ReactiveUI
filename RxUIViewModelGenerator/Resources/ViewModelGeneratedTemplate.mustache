using System;
using ReactiveUI;
using ReactiveUI.Routing;
using System.Runtime.Serialization;

/* NB: This class was generated using the scaffolding generator. You probably
       want to rerun the scaffold generator or edit the non-generated version
	   of this file (i.e. MyViewModel.cs instead of MyViewModel.Generated.cs)
*/

namespace {{namespace}}.ViewModels
{
    {{#interfaces}}
    {{definition}}
    {{/interfaces}}

    {{#interfaces}}
	[DataContract]
    public partial class {{implClassName}} : ReactiveObject, {{interfaceName}}
    {
        {{#properties}}
        {{#outputProp}}
        [IgnoreDataMember] ObservableAsPropertyHelper<{{type}}> _{{name}};
        [IgnoreDataMember] public {{type}} {{name}} 
        {
            get { return _{{name}}.Value; }
        }
        {{/outputProp}}
        {{#readWriteProp}}
        [DataMember] {{type}} _{{name}};
        [IgnoreDataMember] public {{type}} {{name}} 
        {
            get { return _{{name}}; }
            set { this.RaiseAndSetIfChanged(ref _{{name}}, value); }
        }
        {{/readWriteProp}}
        {{#onceProp}}
        [IgnoreDataMember] {{type}} {{name}} { get; protected set; }
        {{/onceProp}}
        {{#anythingElse}}
        {{name}}
        {{/anythingElse}}
        {{/properties}}
        {{#isRoutableViewModel}}
        [IgnoreDataMember] public IScreen HostScreen { get; protected set; }
        {{/isRoutableViewModel}}
    }
    {{/interfaces}}
}