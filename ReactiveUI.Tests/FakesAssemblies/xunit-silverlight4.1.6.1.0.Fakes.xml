<?xml version="1.0"?>
<doc>
    <assembly>
        <name>xunit-silverlight4.1.6.1.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Xunit.Fakes.ShimAssert">
            <summary>Shim type of Xunit.Assert</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.#ctor(Xunit.Assert)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.ContainsOf1M0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Assert.Contains(!!0 expected, IEnumerable`1&lt;!!0&gt; collection)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.ContainsOf1M0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0}})">
            <summary>Sets the shim of Assert.Contains(!!0 expected, IEnumerable`1&lt;!!0&gt; collection, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.DoesNotContainOf1M0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of Assert.DoesNotContain(!!0 expected, IEnumerable`1&lt;!!0&gt; collection)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.DoesNotContainOf1M0IEnumerableOfM0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0}})">
            <summary>Sets the shim of Assert.DoesNotContain(!!0 expected, IEnumerable`1&lt;!!0&gt; collection, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.EqualOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0})">
            <summary>Sets the shim of Assert.Equal(!!0 expected, !!0 actual)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.EqualOf1M0M0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0,System.Collections.Generic.IEqualityComparer{``0}})">
            <summary>Sets the shim of Assert.Equal(!!0 expected, !!0 actual, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.GetComparerOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IComparer{``0}})">
            <summary>Sets the shim of Assert.GetComparer()</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.GetEqualityComparerOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEqualityComparer{``0}})">
            <summary>Sets the shim of Assert.GetEqualityComparer()</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.InRangeOf1M0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0,``0})">
            <summary>Sets the shim of Assert.InRange(!!0 actual, !!0 low, !!0 high)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.InRangeOf1M0M0M0IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0,``0,System.Collections.Generic.IComparer{``0}})">
            <summary>Sets the shim of Assert.InRange(!!0 actual, !!0 low, !!0 high, IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.IsAssignableFromOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of Assert.IsAssignableFrom(Object object)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.IsNotTypeOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Object})">
            <summary>Sets the shim of Assert.IsNotType(Object object)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.IsTypeOf1Object``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Object,``0})">
            <summary>Sets the shim of Assert.IsType(Object object)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.NotEqualOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0})">
            <summary>Sets the shim of Assert.NotEqual(!!0 expected, !!0 actual)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.NotEqualOf1M0M0IEqualityComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0,System.Collections.Generic.IEqualityComparer{``0}})">
            <summary>Sets the shim of Assert.NotEqual(!!0 expected, !!0 actual, IEqualityComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.NotInRangeOf1M0M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0,``0})">
            <summary>Sets the shim of Assert.NotInRange(!!0 actual, !!0 low, !!0 high)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.NotInRangeOf1M0M0M0IComparerOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0,``0,``0,System.Collections.Generic.IComparer{``0}})">
            <summary>Sets the shim of Assert.NotInRange(!!0 actual, !!0 low, !!0 high, IComparer`1&lt;!!0&gt; comparer)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.SingleOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},``0})">
            <summary>Sets the shim of Assert.Single(IEnumerable`1&lt;!!0&gt; collection)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.SingleOf1IEnumerableOfM0PredicateOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Predicate{``0},``0})">
            <summary>Sets the shim of Assert.Single(IEnumerable`1&lt;!!0&gt; collection, Predicate`1&lt;!!0&gt; predicate)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.ThrowsOf1AssertThrowsDelegate``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Xunit.Assert.ThrowsDelegate,``0})">
            <summary>Sets the shim of Assert.Throws(ThrowsDelegate testCode)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert.ThrowsOf1AssertThrowsDelegateWithReturn``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Xunit.Assert.ThrowsDelegateWithReturn,``0})">
            <summary>Sets the shim of Assert.Throws(ThrowsDelegateWithReturn testCode)</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAssert._Singleb__0Of1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,System.Boolean})">
            <summary>Sets the shim of Assert.&lt;Single&gt;b__0(!!0 item)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.Constructor">
            <summary>Sets the shim of Assert.Assert()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.ContainsStringIEnumerableOfStringStringComparer">
            <summary>Sets the shim of Assert.Contains(String expected, IEnumerable`1&lt;String&gt; collection, StringComparer comparer)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.ContainsStringString">
            <summary>Sets the shim of Assert.Contains(String expectedSubString, String actualString)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.ContainsStringStringStringComparison">
            <summary>Sets the shim of Assert.Contains(String expectedSubString, String actualString, StringComparison comparisonType)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.DoesNotContainStringIEnumerableOfStringStringComparer">
            <summary>Sets the shim of Assert.DoesNotContain(String expected, IEnumerable`1&lt;String&gt; collection, StringComparer comparer)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.DoesNotContainStringString">
            <summary>Sets the shim of Assert.DoesNotContain(String expectedSubString, String actualString)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.DoesNotContainStringStringStringComparison">
            <summary>Sets the shim of Assert.DoesNotContain(String expectedSubString, String actualString, StringComparison comparisonType)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.DoesNotThrowAssertThrowsDelegate">
            <summary>Sets the shim of Assert.DoesNotThrow(ThrowsDelegate testCode)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.EmptyIEnumerable">
            <summary>Sets the shim of Assert.Empty(IEnumerable collection)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.EqualStringStringStringComparer">
            <summary>Sets the shim of Assert.Equal(String expected, String actual, StringComparer comparer)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.EqualsObjectObject">
            <summary>Sets the shim of Assert.Equals(Object a, Object b)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.FalseBoolean">
            <summary>Sets the shim of Assert.False(Boolean condition)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.FalseBooleanString">
            <summary>Sets the shim of Assert.False(Boolean condition, String userMessage)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.IsAssignableFromTypeObject">
            <summary>Sets the shim of Assert.IsAssignableFrom(Type expectedType, Object object)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.IsNotTypeTypeObject">
            <summary>Sets the shim of Assert.IsNotType(Type expectedType, Object object)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.IsTypeTypeObject">
            <summary>Sets the shim of Assert.IsType(Type expectedType, Object object)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.NotEmptyIEnumerable">
            <summary>Sets the shim of Assert.NotEmpty(IEnumerable collection)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.NotEqualStringStringStringComparer">
            <summary>Sets the shim of Assert.NotEqual(String expected, String actual, StringComparer comparer)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.NotNullObject">
            <summary>Sets the shim of Assert.NotNull(Object object)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.NotSameObjectObject">
            <summary>Sets the shim of Assert.NotSame(Object expected, Object actual)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.NullObject">
            <summary>Sets the shim of Assert.Null(Object object)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.SameObjectObject">
            <summary>Sets the shim of Assert.Same(Object expected, Object actual)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.SingleIEnumerable">
            <summary>Sets the shim of Assert.Single(IEnumerable collection)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.ThrowsTypeAssertThrowsDelegate">
            <summary>Sets the shim of Assert.Throws(Type exceptionType, ThrowsDelegate testCode)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.ThrowsTypeAssertThrowsDelegateWithReturn">
            <summary>Sets the shim of Assert.Throws(Type exceptionType, ThrowsDelegateWithReturn testCode)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.TrueBoolean">
            <summary>Sets the shim of Assert.True(Boolean condition)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAssert.TrueBooleanString">
            <summary>Sets the shim of Assert.True(Boolean condition, String userMessage)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimAssert.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimAttribute">
            <summary>Shim type of Xunit.Attribute</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAttribute.#ctor(Xunit.Attribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAttribute.Constructor">
            <summary>Sets the shim of Attribute.Attribute()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAttribute.TypeIdGet">
            <summary>Sets the shim of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimAttribute.AllInstances.TypeIdGet">
            <summary>Sets the shim of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimBeforeAfterTestAttribute">
            <summary>Shim type of Xunit.BeforeAfterTestAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimBeforeAfterTestAttribute.#ctor(Xunit.BeforeAfterTestAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimBeforeAfterTestAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimBeforeAfterTestAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimBeforeAfterTestAttribute.AfterMethodInfo">
            <summary>Sets the shim of BeforeAfterTestAttribute.After(MethodInfo methodUnderTest)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimBeforeAfterTestAttribute.BeforeMethodInfo">
            <summary>Sets the shim of BeforeAfterTestAttribute.Before(MethodInfo methodUnderTest)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimBeforeAfterTestAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimBeforeAfterTestAttribute.Constructor">
            <summary>Sets the shim of BeforeAfterTestAttribute.BeforeAfterTestAttribute()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimBeforeAfterTestAttribute.TypeIdGet">
            <summary>Sets the shim of BeforeAfterTestAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimBeforeAfterTestAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimBeforeAfterTestAttribute.AllInstances.AfterMethodInfo">
            <summary>Sets the shim of BeforeAfterTestAttribute.After(MethodInfo methodUnderTest)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimBeforeAfterTestAttribute.AllInstances.BeforeMethodInfo">
            <summary>Sets the shim of BeforeAfterTestAttribute.Before(MethodInfo methodUnderTest)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimBeforeAfterTestAttribute.AllInstances.TypeIdGet">
            <summary>Sets the shim of BeforeAfterTestAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimFactAttribute">
            <summary>Shim type of Xunit.FactAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimFactAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimFactAttribute.#ctor(Xunit.FactAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimFactAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimFactAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.Constructor">
            <summary>Sets the shim of FactAttribute.FactAttribute()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.CreateTestCommandsIMethodInfo">
            <summary>Sets the shim of FactAttribute.CreateTestCommands(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.DisplayNameGet">
            <summary>Sets the shim of FactAttribute.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.DisplayNameSetString">
            <summary>Sets the shim of FactAttribute.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.EnumerateTestCommandsIMethodInfo">
            <summary>Sets the shim of FactAttribute.EnumerateTestCommands(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.NameGet">
            <summary>Sets the shim of FactAttribute.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.NameSetString">
            <summary>Sets the shim of FactAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.SkipGet">
            <summary>Sets the shim of FactAttribute.get_Skip()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.SkipSetString">
            <summary>Sets the shim of FactAttribute.set_Skip(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.TimeoutGet">
            <summary>Sets the shim of FactAttribute.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.TimeoutSetInt32">
            <summary>Sets the shim of FactAttribute.set_Timeout(Int32 value)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimFactAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.CreateTestCommandsIMethodInfo">
            <summary>Sets the shim of FactAttribute.CreateTestCommands(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.DisplayNameGet">
            <summary>Sets the shim of FactAttribute.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of FactAttribute.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.EnumerateTestCommandsIMethodInfo">
            <summary>Sets the shim of FactAttribute.EnumerateTestCommands(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.NameGet">
            <summary>Sets the shim of FactAttribute.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of FactAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.SkipGet">
            <summary>Sets the shim of FactAttribute.get_Skip()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.SkipSetString">
            <summary>Sets the shim of FactAttribute.set_Skip(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.TimeoutGet">
            <summary>Sets the shim of FactAttribute.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimFactAttribute.AllInstances.TimeoutSetInt32">
            <summary>Sets the shim of FactAttribute.set_Timeout(Int32 value)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimMarshalByRefObject">
            <summary>Shim type of Xunit.MarshalByRefObject</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimMarshalByRefObject.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimMarshalByRefObject.#ctor(Xunit.MarshalByRefObject)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimMarshalByRefObject.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimMarshalByRefObject.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimMarshalByRefObject.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimMarshalByRefObject.Constructor">
            <summary>Sets the shim of MarshalByRefObject.MarshalByRefObject()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimMarshalByRefObject.InitializeLifetimeService">
            <summary>Sets the shim of MarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimMarshalByRefObject.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimMarshalByRefObject.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of MarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimRecord">
            <summary>Shim type of Xunit.Record</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimRecord.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimRecord.#ctor(Xunit.Record)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimRecord.Constructor">
            <summary>Sets the shim of Record.Record()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimRecord.ExceptionAssertThrowsDelegate">
            <summary>Sets the shim of Record.Exception(ThrowsDelegate code)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimRecord.ExceptionAssertThrowsDelegateWithReturn">
            <summary>Sets the shim of Record.Exception(ThrowsDelegateWithReturn code)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimRunWithAttribute">
            <summary>Shim type of Xunit.RunWithAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimRunWithAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimRunWithAttribute.#ctor(Xunit.RunWithAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimRunWithAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimRunWithAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimRunWithAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimRunWithAttribute.ConstructorType">
            <summary>Sets the shim of RunWithAttribute.RunWithAttribute(Type commandType)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimRunWithAttribute.TestClassCommandGet">
            <summary>Sets the shim of RunWithAttribute.get_TestClassCommand()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimRunWithAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimRunWithAttribute.AllInstances.TestClassCommandGet">
            <summary>Sets the shim of RunWithAttribute.get_TestClassCommand()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimTrace">
            <summary>Shim type of Xunit.Trace</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTrace.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTrace.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTrace.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTrace.AssertBoolean">
            <summary>Sets the shim of Trace.Assert(Boolean condition)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTrace.AssertBooleanString">
            <summary>Sets the shim of Trace.Assert(Boolean condition, String message)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTrace.AssertBooleanStringString">
            <summary>Sets the shim of Trace.Assert(Boolean condition, String message, String detailedMessage)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTrace.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTrace.ListenersGet">
            <summary>Sets the shim of Trace.get_Listeners()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTrace.StaticConstructor">
            <summary>Sets the shim of Trace.Trace()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTrace.WriteLineString">
            <summary>Sets the shim of Trace.WriteLine(String message)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimTraceListener">
            <summary>Shim type of Xunit.TraceListener</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTraceListener.#ctor(Xunit.TraceListener)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTraceListener.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTraceListener.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraceListener.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraceListener.Constructor">
            <summary>Sets the shim of TraceListener.TraceListener()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraceListener.FailString">
            <summary>Sets the shim of TraceListener.Fail(String message)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimTraceListener.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraceListener.AllInstances.FailString">
            <summary>Sets the shim of TraceListener.Fail(String message)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimTraitAttribute">
            <summary>Shim type of Xunit.TraitAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTraitAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTraitAttribute.#ctor(Xunit.TraitAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTraitAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimTraitAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraitAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraitAttribute.ConstructorStringString">
            <summary>Sets the shim of TraitAttribute.TraitAttribute(String name, String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraitAttribute.NameGet">
            <summary>Sets the shim of TraitAttribute.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraitAttribute.TypeIdGet">
            <summary>Sets the shim of TraitAttribute.get_TypeId()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraitAttribute.ValueGet">
            <summary>Sets the shim of TraitAttribute.get_Value()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimTraitAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraitAttribute.AllInstances.NameGet">
            <summary>Sets the shim of TraitAttribute.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraitAttribute.AllInstances.TypeIdGet">
            <summary>Sets the shim of TraitAttribute.get_TypeId()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimTraitAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of TraitAttribute.get_Value()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimXmlAttribute">
            <summary>Shim type of Xunit.XmlAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttribute.#ctor(Xunit.XmlAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.ConstructorString">
            <summary>Sets the shim of XmlAttribute.XmlAttribute(String name)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.NameGet">
            <summary>Sets the shim of XmlAttribute.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.NameSetString">
            <summary>Sets the shim of XmlAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.ValueGet">
            <summary>Sets the shim of XmlAttribute.get_Value()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.ValueSetString">
            <summary>Sets the shim of XmlAttribute.set_Value(String value)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimXmlAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.AllInstances.NameGet">
            <summary>Sets the shim of XmlAttribute.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of XmlAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of XmlAttribute.get_Value()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttribute.AllInstances.ValueSetString">
            <summary>Sets the shim of XmlAttribute.set_Value(String value)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimXmlAttributeCollection">
            <summary>Shim type of Xunit.XmlAttributeCollection</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttributeCollection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttributeCollection.#ctor(Xunit.XmlAttributeCollection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttributeCollection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttributeCollection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttributeCollection.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlAttributeCollection.Bind(System.Collections.Generic.IEnumerable{Xunit.XmlAttribute})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.AppendXmlAttribute">
            <summary>Sets the shim of XmlAttributeCollection.Append(XmlAttribute attr)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.Constructor">
            <summary>Sets the shim of XmlAttributeCollection.XmlAttributeCollection()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.GetEnumerator">
            <summary>Sets the shim of XmlAttributeCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.ItemGetString">
            <summary>Sets the shim of XmlAttributeCollection.get_Item(String name)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of XmlAttributeCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimXmlAttributeCollection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.AllInstances.AppendXmlAttribute">
            <summary>Sets the shim of XmlAttributeCollection.Append(XmlAttribute attr)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.AllInstances.GetEnumerator">
            <summary>Sets the shim of XmlAttributeCollection.GetEnumerator()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.AllInstances.ItemGetString">
            <summary>Sets the shim of XmlAttributeCollection.get_Item(String name)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlAttributeCollection.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of XmlAttributeCollection.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimXmlElement">
            <summary>Shim type of Xunit.XmlElement</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlElement.#ctor(Xunit.XmlElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlElement.ConstructorStringXmlDocument">
            <summary>Sets the shim of XmlElement.XmlElement(String name, XmlDocument ownerDocument)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimXmlElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimXmlNode">
            <summary>Shim type of Xunit.XmlNode</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlNode.#ctor(Xunit.XmlNode)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlNode.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Fakes.ShimXmlNode.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AppendChildXmlNode">
            <summary>Sets the shim of XmlNode.AppendChild(XmlNode xmlNode)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AttributesGet">
            <summary>Sets the shim of XmlNode.get_Attributes()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.ChildNodesGet">
            <summary>Sets the shim of XmlNode.get_ChildNodes()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.ClearChildren">
            <summary>Sets the shim of XmlNode.ClearChildren()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.ConstructorStringXmlDocument">
            <summary>Sets the shim of XmlNode.XmlNode(String name, XmlDocument ownerDocument)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.InnerTextGet">
            <summary>Sets the shim of XmlNode.get_InnerText()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.InnerTextSetString">
            <summary>Sets the shim of XmlNode.set_InnerText(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.NameGet">
            <summary>Sets the shim of XmlNode.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.OuterXmlGet">
            <summary>Sets the shim of XmlNode.get_OuterXml()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.OwnerDocumentGet">
            <summary>Sets the shim of XmlNode.get_OwnerDocument()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.ValueGet">
            <summary>Sets the shim of XmlNode.get_Value()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.ValueSetString">
            <summary>Sets the shim of XmlNode.set_Value(String value)</summary>
        </member>
        <member name="T:Xunit.Fakes.ShimXmlNode.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.AppendChildXmlNode">
            <summary>Sets the shim of XmlNode.AppendChild(XmlNode xmlNode)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.AttributesGet">
            <summary>Sets the shim of XmlNode.get_Attributes()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.ChildNodesGet">
            <summary>Sets the shim of XmlNode.get_ChildNodes()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.ClearChildren">
            <summary>Sets the shim of XmlNode.ClearChildren()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.InnerTextGet">
            <summary>Sets the shim of XmlNode.get_InnerText()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.InnerTextSetString">
            <summary>Sets the shim of XmlNode.set_InnerText(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.NameGet">
            <summary>Sets the shim of XmlNode.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.OuterXmlGet">
            <summary>Sets the shim of XmlNode.get_OuterXml()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.OwnerDocumentGet">
            <summary>Sets the shim of XmlNode.get_OwnerDocument()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.ValueGet">
            <summary>Sets the shim of XmlNode.get_Value()</summary>
        </member>
        <member name="P:Xunit.Fakes.ShimXmlNode.AllInstances.ValueSetString">
            <summary>Sets the shim of XmlNode.set_Value(String value)</summary>
        </member>
        <member name="T:Xunit.Fakes.StubAttribute">
            <summary>Stub type of Xunit.Attribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.StubBeforeAfterTestAttribute">
            <summary>Stub type of Xunit.BeforeAfterTestAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubBeforeAfterTestAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubBeforeAfterTestAttribute.After(System.Reflection.MethodInfo)">
            <summary>Sets the stub of BeforeAfterTestAttribute.After(MethodInfo methodUnderTest)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubBeforeAfterTestAttribute.AfterMethodInfo">
            <summary>Sets the stub of BeforeAfterTestAttribute.After(MethodInfo methodUnderTest)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubBeforeAfterTestAttribute.Before(System.Reflection.MethodInfo)">
            <summary>Sets the stub of BeforeAfterTestAttribute.Before(MethodInfo methodUnderTest)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubBeforeAfterTestAttribute.BeforeMethodInfo">
            <summary>Sets the stub of BeforeAfterTestAttribute.Before(MethodInfo methodUnderTest)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubBeforeAfterTestAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubBeforeAfterTestAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubBeforeAfterTestAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubBeforeAfterTestAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubBeforeAfterTestAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubBeforeAfterTestAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubBeforeAfterTestAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubBeforeAfterTestAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubBeforeAfterTestAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubBeforeAfterTestAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubBeforeAfterTestAttribute.TypeIdGet">
            <summary>Sets the stub of BeforeAfterTestAttribute.get_TypeId()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubBeforeAfterTestAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubBeforeAfterTestAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubBeforeAfterTestAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubBeforeAfterTestAttribute.TypeId">
            <summary>Sets the stub of BeforeAfterTestAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.StubFactAttribute">
            <summary>Stub type of Xunit.FactAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.AttachBackingFieldToDisplayName">
            <summary>Attaches delegates to emulate StubFactAttribute.DisplayName as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubFactAttribute.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.AttachBackingFieldToSkip">
            <summary>Attaches delegates to emulate StubFactAttribute.Skip as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.DisplayNameGet">
            <summary>Sets the stub of FactAttribute.get_DisplayName()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.DisplayNameSetString">
            <summary>Sets the stub of FactAttribute.set_DisplayName(String value)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.EnumerateTestCommands(Xunit.Sdk.IMethodInfo)">
            <summary>Sets the stub of FactAttribute.EnumerateTestCommands(IMethodInfo method)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.EnumerateTestCommandsIMethodInfo">
            <summary>Sets the stub of FactAttribute.EnumerateTestCommands(IMethodInfo method)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubFactAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubFactAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.NameGet">
            <summary>Sets the stub of FactAttribute.get_Name()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.NameSetString">
            <summary>Sets the stub of FactAttribute.set_Name(String value)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.SkipGet">
            <summary>Sets the stub of FactAttribute.get_Skip()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.SkipSetString">
            <summary>Sets the stub of FactAttribute.set_Skip(String value)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubFactAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubFactAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubFactAttribute.DisplayName">
            <summary>Sets the stub of FactAttribute.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubFactAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubFactAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubFactAttribute.Name">
            <summary>Sets the stub of FactAttribute.get_Name()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubFactAttribute.Skip">
            <summary>Sets the stub of FactAttribute.get_Skip()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubFactAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.StubIDictionary">
            <summary>Stub type of Xunit.IDictionary</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIDictionary.#ctor">
            <summary>Initializes a new instance of type StubIDictionary</summary>
        </member>
        <member name="F:Xunit.Fakes.StubIDictionary.ContainsObject">
            <summary>Sets the stub of IDictionary.Contains(Object key)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubIDictionary.ItemGetObject">
            <summary>Sets the stub of IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIDictionary.x4::Xunit#IDictionary#Contains(System.Object)">
            <summary>Sets the stub of IDictionary.Contains(Object key)</summary>
        </member>
        <member name="P:Xunit.Fakes.StubIDictionary.Xunit#IDictionary#Item(System.Object)">
            <summary>Sets the stub of IDictionary.get_Item(Object key)</summary>
        </member>
        <member name="T:Xunit.Fakes.StubIMessage">
            <summary>Stub type of Xunit.IMessage</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIMessage.#ctor">
            <summary>Initializes a new instance of type StubIMessage</summary>
        </member>
        <member name="F:Xunit.Fakes.StubIMessage.PropertiesGet">
            <summary>Sets the stub of IMessage.get_Properties()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubIMessage.x4::Xunit#IMessage#Properties">
            <summary>Sets the stub of IMessage.get_Properties()</summary>
        </member>
        <member name="T:Xunit.Fakes.StubIMessageCtrl">
            <summary>Stub type of Xunit.IMessageCtrl</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIMessageCtrl.#ctor">
            <summary>Initializes a new instance of type StubIMessageCtrl</summary>
        </member>
        <member name="F:Xunit.Fakes.StubIMessageCtrl.CancelInt32">
            <summary>Sets the stub of IMessageCtrl.Cancel(Int32 msToCancel)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIMessageCtrl.x4::Xunit#IMessageCtrl#Cancel(System.Int32)">
            <summary>Sets the stub of IMessageCtrl.Cancel(Int32 msToCancel)</summary>
        </member>
        <member name="T:Xunit.Fakes.StubIMessageSink">
            <summary>Stub type of Xunit.IMessageSink</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIMessageSink.#ctor">
            <summary>Initializes a new instance of type StubIMessageSink</summary>
        </member>
        <member name="F:Xunit.Fakes.StubIMessageSink.AsyncProcessMessageIMessageIMessageSink">
            <summary>Sets the stub of IMessageSink.AsyncProcessMessage(IMessage msg, IMessageSink replySink)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubIMessageSink.NextSinkGet">
            <summary>Sets the stub of IMessageSink.get_NextSink()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubIMessageSink.SyncProcessMessageIMessage">
            <summary>Sets the stub of IMessageSink.SyncProcessMessage(IMessage msg)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIMessageSink.x4::Xunit#IMessageSink#AsyncProcessMessage(Xunit.IMessage,Xunit.IMessageSink)">
            <summary>Sets the stub of IMessageSink.AsyncProcessMessage(IMessage msg, IMessageSink replySink)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIMessageSink.x4::Xunit#IMessageSink#SyncProcessMessage(Xunit.IMessage)">
            <summary>Sets the stub of IMessageSink.SyncProcessMessage(IMessage msg)</summary>
        </member>
        <member name="P:Xunit.Fakes.StubIMessageSink.x4::Xunit#IMessageSink#NextSink">
            <summary>Sets the stub of IMessageSink.get_NextSink()</summary>
        </member>
        <member name="T:Xunit.Fakes.StubIUseFixture`1">
            <summary>Stub type of Xunit.IUseFixture`1</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIUseFixture`1.#ctor">
            <summary>Initializes a new instance of type StubIUseFixture</summary>
        </member>
        <member name="F:Xunit.Fakes.StubIUseFixture`1.SetFixtureT0">
            <summary>Sets the stub of IUseFixture`1.SetFixture(!0 data)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubIUseFixture`1.x4::Xunit#IUseFixture{T}#SetFixture(`0)">
            <summary>Sets the stub of IUseFixture`1.SetFixture(!0 data)</summary>
        </member>
        <member name="T:Xunit.Fakes.StubMarshalByRefObject">
            <summary>Stub type of Xunit.MarshalByRefObject</summary>
        </member>
        <member name="M:Xunit.Fakes.StubMarshalByRefObject.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubMarshalByRefObject.InitializeLifetimeService">
            <summary>Sets the stub of MarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubMarshalByRefObject.InitializeLifetimeService01">
            <summary>Sets the stub of MarshalByRefObject.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubMarshalByRefObject.InitializeStub">
            <summary>Initializes a new instance of type StubMarshalByRefObject</summary>
        </member>
        <member name="P:Xunit.Fakes.StubMarshalByRefObject.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubMarshalByRefObject.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubMarshalByRefObject.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Fakes.StubRecord">
            <summary>Stub type of Xunit.Record</summary>
        </member>
        <member name="M:Xunit.Fakes.StubRecord.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubRecord.InitializeStub">
            <summary>Initializes a new instance of type StubRecord</summary>
        </member>
        <member name="P:Xunit.Fakes.StubRecord.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubRecord.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubRecord.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Fakes.StubRunWithAttribute">
            <summary>Stub type of Xunit.RunWithAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubRunWithAttribute.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubRunWithAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubRunWithAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubRunWithAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubRunWithAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubRunWithAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubRunWithAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubRunWithAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubRunWithAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubRunWithAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubRunWithAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubRunWithAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubRunWithAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubRunWithAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubRunWithAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubRunWithAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.StubTraceListener">
            <summary>Stub type of Xunit.TraceListener</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraceListener.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraceListener.Fail(System.String)">
            <summary>Sets the stub of TraceListener.Fail(String message)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraceListener.Fail(System.String,System.String)">
            <summary>Sets the stub of TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraceListener.FailString">
            <summary>Sets the stub of TraceListener.Fail(String message)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraceListener.FailStringString">
            <summary>Sets the stub of TraceListener.Fail(String message, String detailMessage)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraceListener.InitializeStub">
            <summary>Initializes a new instance of type StubTraceListener</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraceListener.Write(System.String)">
            <summary>Sets the stub of TraceListener.Write(String message)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraceListener.WriteLine(System.String)">
            <summary>Sets the stub of TraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraceListener.WriteLineString">
            <summary>Sets the stub of TraceListener.WriteLine(String message)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraceListener.WriteString">
            <summary>Sets the stub of TraceListener.Write(String message)</summary>
        </member>
        <member name="P:Xunit.Fakes.StubTraceListener.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubTraceListener.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubTraceListener.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Fakes.StubTraitAttribute">
            <summary>Stub type of Xunit.TraitAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraitAttribute.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraitAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraitAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraitAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraitAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraitAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubTraitAttribute</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraitAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraitAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Xunit.Fakes.StubTraitAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraitAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubTraitAttribute.TypeIdGet">
            <summary>Sets the stub of TraitAttribute.get_TypeId()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubTraitAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubTraitAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubTraitAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubTraitAttribute.TypeId">
            <summary>Sets the stub of TraitAttribute.get_TypeId()</summary>
        </member>
        <member name="T:Xunit.Fakes.StubXmlAttributeCollection">
            <summary>Stub type of Xunit.XmlAttributeCollection</summary>
        </member>
        <member name="M:Xunit.Fakes.StubXmlAttributeCollection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubXmlAttributeCollection.InitializeStub">
            <summary>Initializes a new instance of type StubXmlAttributeCollection</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlAttributeCollection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlAttributeCollection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlAttributeCollection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Fakes.StubXmlNode">
            <summary>Stub type of Xunit.XmlNode</summary>
        </member>
        <member name="M:Xunit.Fakes.StubXmlNode.#ctor(System.String,Xunit.XmlDocument)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Fakes.StubXmlNode.AttachBackingFieldToInnerText">
            <summary>Attaches delegates to emulate StubXmlNode.InnerText as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Fakes.StubXmlNode.AttachBackingFieldToValue">
            <summary>Attaches delegates to emulate StubXmlNode.Value as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Fakes.StubXmlNode.InitializeStub">
            <summary>Initializes a new instance of type StubXmlNode</summary>
        </member>
        <member name="F:Xunit.Fakes.StubXmlNode.InnerTextGet">
            <summary>Sets the stub of XmlNode.get_InnerText()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubXmlNode.InnerTextSetString">
            <summary>Sets the stub of XmlNode.set_InnerText(String value)</summary>
        </member>
        <member name="F:Xunit.Fakes.StubXmlNode.OuterXmlGet">
            <summary>Sets the stub of XmlNode.get_OuterXml()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubXmlNode.ValueGet">
            <summary>Sets the stub of XmlNode.get_Value()</summary>
        </member>
        <member name="F:Xunit.Fakes.StubXmlNode.ValueSetString">
            <summary>Sets the stub of XmlNode.set_Value(String value)</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlNode.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlNode.InnerText">
            <summary>Sets the stub of XmlNode.get_InnerText()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlNode.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlNode.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlNode.OuterXml">
            <summary>Sets the stub of XmlNode.get_OuterXml()</summary>
        </member>
        <member name="P:Xunit.Fakes.StubXmlNode.Value">
            <summary>Sets the stub of XmlNode.get_Value()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimAfterTestException">
            <summary>Shim type of Xunit.Sdk.AfterTestException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAfterTestException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAfterTestException.#ctor(Xunit.Sdk.AfterTestException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAfterTestException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAfterTestException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAfterTestException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.AfterExceptionsGet">
            <summary>Sets the shim of AfterTestException.get_AfterExceptions()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.ConstructorExceptionArray">
            <summary>Sets the shim of AfterTestException.AfterTestException(Exception[] exceptions)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.ConstructorIEnumerableOfException">
            <summary>Sets the shim of AfterTestException.AfterTestException(IEnumerable`1&lt;Exception&gt; exceptions)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.MessageGet">
            <summary>Sets the shim of AfterTestException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.StackTraceGet">
            <summary>Sets the shim of AfterTestException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimAfterTestException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.AllInstances.AfterExceptionsGet">
            <summary>Sets the shim of AfterTestException.get_AfterExceptions()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.AllInstances.MessageGet">
            <summary>Sets the shim of AfterTestException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAfterTestException.AllInstances.StackTraceGet">
            <summary>Sets the shim of AfterTestException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimAssemblyResult">
            <summary>Shim type of Xunit.Sdk.AssemblyResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssemblyResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssemblyResult.#ctor(Xunit.Sdk.AssemblyResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssemblyResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssemblyResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssemblyResult.Bind(Xunit.Sdk.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.ConfigFilenameGet">
            <summary>Sets the shim of AssemblyResult.get_ConfigFilename()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.ConfigFilenameSetString">
            <summary>Sets the shim of AssemblyResult.set_ConfigFilename(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.ConstructorString">
            <summary>Sets the shim of AssemblyResult.AssemblyResult(String assemblyFilename)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.ConstructorStringString">
            <summary>Sets the shim of AssemblyResult.AssemblyResult(String assemblyFilename, String configFilename)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.DirectoryGet">
            <summary>Sets the shim of AssemblyResult.get_Directory()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.FailCountGet">
            <summary>Sets the shim of AssemblyResult.get_FailCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.FailCountSetInt32">
            <summary>Sets the shim of AssemblyResult.set_FailCount(Int32 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.FilenameGet">
            <summary>Sets the shim of AssemblyResult.get_Filename()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.FilenameSetString">
            <summary>Sets the shim of AssemblyResult.set_Filename(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.PassCountGet">
            <summary>Sets the shim of AssemblyResult.get_PassCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.PassCountSetInt32">
            <summary>Sets the shim of AssemblyResult.set_PassCount(Int32 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.SkipCountGet">
            <summary>Sets the shim of AssemblyResult.get_SkipCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.SkipCountSetInt32">
            <summary>Sets the shim of AssemblyResult.set_SkipCount(Int32 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.ToXmlXmlNode">
            <summary>Sets the shim of AssemblyResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.ConfigFilenameGet">
            <summary>Sets the shim of AssemblyResult.get_ConfigFilename()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.ConfigFilenameSetString">
            <summary>Sets the shim of AssemblyResult.set_ConfigFilename(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.DirectoryGet">
            <summary>Sets the shim of AssemblyResult.get_Directory()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.FailCountGet">
            <summary>Sets the shim of AssemblyResult.get_FailCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.FailCountSetInt32">
            <summary>Sets the shim of AssemblyResult.set_FailCount(Int32 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.FilenameGet">
            <summary>Sets the shim of AssemblyResult.get_Filename()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.FilenameSetString">
            <summary>Sets the shim of AssemblyResult.set_Filename(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.PassCountGet">
            <summary>Sets the shim of AssemblyResult.get_PassCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.PassCountSetInt32">
            <summary>Sets the shim of AssemblyResult.set_PassCount(Int32 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.SkipCountGet">
            <summary>Sets the shim of AssemblyResult.get_SkipCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.SkipCountSetInt32">
            <summary>Sets the shim of AssemblyResult.set_SkipCount(Int32 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssemblyResult.AllInstances.ToXmlXmlNode">
            <summary>Sets the shim of AssemblyResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimAssertActualExpectedException">
            <summary>Shim type of Xunit.Sdk.AssertActualExpectedException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.#ctor(Xunit.Sdk.AssertActualExpectedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.ActualGet">
            <summary>Sets the shim of AssertActualExpectedException.get_Actual()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.ConstructorObjectObjectString">
            <summary>Sets the shim of AssertActualExpectedException.AssertActualExpectedException(Object expected, Object actual, String userMessage)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.ConstructorObjectObjectStringBoolean">
            <summary>Sets the shim of AssertActualExpectedException.AssertActualExpectedException(Object expected, Object actual, String userMessage, Boolean skipPositionCheck)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.ConvertToStringObject">
            <summary>Sets the shim of AssertActualExpectedException.ConvertToString(Object value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.ExpectedGet">
            <summary>Sets the shim of AssertActualExpectedException.get_Expected()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.FormatMultiLineString">
            <summary>Sets the shim of AssertActualExpectedException.FormatMultiLine(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.MessageGet">
            <summary>Sets the shim of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.AllInstances.ActualGet">
            <summary>Sets the shim of AssertActualExpectedException.get_Actual()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.AllInstances.ExpectedGet">
            <summary>Sets the shim of AssertActualExpectedException.get_Expected()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertActualExpectedException.AllInstances.MessageGet">
            <summary>Sets the shim of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimAssertException">
            <summary>Shim type of Xunit.Sdk.AssertException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertException.#ctor(Xunit.Sdk.AssertException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimAssertException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.Constructor">
            <summary>Sets the shim of AssertException.AssertException()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.ConstructorString">
            <summary>Sets the shim of AssertException.AssertException(String userMessage)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.ConstructorStringException">
            <summary>Sets the shim of AssertException.AssertException(String userMessage, Exception innerException)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.ConstructorStringString">
            <summary>Sets the shim of AssertException.AssertException(String userMessage, String stackTrace)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.FilterStackTraceString">
            <summary>Sets the shim of AssertException.FilterStackTrace(String stackTrace)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.SplitLinesString">
            <summary>Sets the shim of AssertException.SplitLines(String input)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.StackTraceGet">
            <summary>Sets the shim of AssertException.get_StackTrace()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.UserMessageGet">
            <summary>Sets the shim of AssertException.get_UserMessage()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.UserMessageSetString">
            <summary>Sets the shim of AssertException.set_UserMessage(String value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimAssertException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.AllInstances.StackTraceGet">
            <summary>Sets the shim of AssertException.get_StackTrace()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.AllInstances.UserMessageGet">
            <summary>Sets the shim of AssertException.get_UserMessage()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimAssertException.AllInstances.UserMessageSetString">
            <summary>Sets the shim of AssertException.set_UserMessage(String value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimBeforeAfterCommand">
            <summary>Shim type of Xunit.Sdk.BeforeAfterCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.#ctor(Xunit.Sdk.BeforeAfterCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.ConstructorITestCommandMethodInfo">
            <summary>Sets the shim of BeforeAfterCommand.BeforeAfterCommand(ITestCommand innerCommand, MethodInfo testMethod)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.ExecuteObject">
            <summary>Sets the shim of BeforeAfterCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimBeforeAfterCommand.AllInstances.ExecuteObject">
            <summary>Sets the shim of BeforeAfterCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimClassResult">
            <summary>Shim type of Xunit.Sdk.ClassResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimClassResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimClassResult.#ctor(Xunit.Sdk.ClassResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimClassResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimClassResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimClassResult.Bind(Xunit.Sdk.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.ConstructorStringStringString">
            <summary>Sets the shim of ClassResult.ClassResult(String typeName, String typeFullName, String typeNamespace)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.ConstructorType">
            <summary>Sets the shim of ClassResult.ClassResult(Type type)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.ExceptionTypeGet">
            <summary>Sets the shim of ClassResult.get_ExceptionType()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.FailCountGet">
            <summary>Sets the shim of ClassResult.get_FailCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.FullyQualifiedNameGet">
            <summary>Sets the shim of ClassResult.get_FullyQualifiedName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.MessageGet">
            <summary>Sets the shim of ClassResult.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.NameGet">
            <summary>Sets the shim of ClassResult.get_Name()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.NamespaceGet">
            <summary>Sets the shim of ClassResult.get_Namespace()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.PassCountGet">
            <summary>Sets the shim of ClassResult.get_PassCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.SetExceptionException">
            <summary>Sets the shim of ClassResult.SetException(Exception ex)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.SkipCountGet">
            <summary>Sets the shim of ClassResult.get_SkipCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.StackTraceGet">
            <summary>Sets the shim of ClassResult.get_StackTrace()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.ToXmlXmlNode">
            <summary>Sets the shim of ClassResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimClassResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.ExceptionTypeGet">
            <summary>Sets the shim of ClassResult.get_ExceptionType()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.FailCountGet">
            <summary>Sets the shim of ClassResult.get_FailCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.FullyQualifiedNameGet">
            <summary>Sets the shim of ClassResult.get_FullyQualifiedName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.MessageGet">
            <summary>Sets the shim of ClassResult.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.NameGet">
            <summary>Sets the shim of ClassResult.get_Name()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.NamespaceGet">
            <summary>Sets the shim of ClassResult.get_Namespace()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.PassCountGet">
            <summary>Sets the shim of ClassResult.get_PassCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.SetExceptionException">
            <summary>Sets the shim of ClassResult.SetException(Exception ex)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.SkipCountGet">
            <summary>Sets the shim of ClassResult.get_SkipCount()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.StackTraceGet">
            <summary>Sets the shim of ClassResult.get_StackTrace()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimClassResult.AllInstances.ToXmlXmlNode">
            <summary>Sets the shim of ClassResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimCompositeResult">
            <summary>Shim type of Xunit.Sdk.CompositeResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimCompositeResult.#ctor(Xunit.Sdk.CompositeResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimCompositeResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimCompositeResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimCompositeResult.Bind(Xunit.Sdk.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimCompositeResult.AddITestResult">
            <summary>Sets the shim of CompositeResult.Add(ITestResult testResult)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimCompositeResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimCompositeResult.Constructor">
            <summary>Sets the shim of CompositeResult.CompositeResult()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimCompositeResult.ResultsGet">
            <summary>Sets the shim of CompositeResult.get_Results()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimCompositeResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimCompositeResult.AllInstances.AddITestResult">
            <summary>Sets the shim of CompositeResult.Add(ITestResult testResult)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimCompositeResult.AllInstances.ResultsGet">
            <summary>Sets the shim of CompositeResult.get_Results()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimContainsException">
            <summary>Shim type of Xunit.Sdk.ContainsException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimContainsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimContainsException.#ctor(Xunit.Sdk.ContainsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimContainsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimContainsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimContainsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimContainsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimContainsException.ConstructorObject">
            <summary>Sets the shim of ContainsException.ContainsException(Object expected)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimContainsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimDelegatingTestCommand">
            <summary>Shim type of Xunit.Sdk.DelegatingTestCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.#ctor(Xunit.Sdk.DelegatingTestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.ConstructorITestCommand">
            <summary>Sets the shim of DelegatingTestCommand.DelegatingTestCommand(ITestCommand innerCommand)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.DisplayNameGet">
            <summary>Sets the shim of DelegatingTestCommand.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.InnerCommandGet">
            <summary>Sets the shim of DelegatingTestCommand.get_InnerCommand()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.ShouldCreateInstanceGet">
            <summary>Sets the shim of DelegatingTestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.TimeoutGet">
            <summary>Sets the shim of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.ToStartXml">
            <summary>Sets the shim of DelegatingTestCommand.ToStartXml()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.AllInstances.DisplayNameGet">
            <summary>Sets the shim of DelegatingTestCommand.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.AllInstances.InnerCommandGet">
            <summary>Sets the shim of DelegatingTestCommand.get_InnerCommand()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.AllInstances.ShouldCreateInstanceGet">
            <summary>Sets the shim of DelegatingTestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.AllInstances.TimeoutGet">
            <summary>Sets the shim of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDelegatingTestCommand.AllInstances.ToStartXml">
            <summary>Sets the shim of DelegatingTestCommand.ToStartXml()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimDoesNotContainException">
            <summary>Shim type of Xunit.Sdk.DoesNotContainException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotContainException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotContainException.#ctor(Xunit.Sdk.DoesNotContainException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotContainException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotContainException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotContainException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDoesNotContainException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDoesNotContainException.ConstructorObject">
            <summary>Sets the shim of DoesNotContainException.DoesNotContainException(Object expected)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimDoesNotContainException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimDoesNotThrowException">
            <summary>Shim type of Xunit.Sdk.DoesNotThrowException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotThrowException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotThrowException.#ctor(Xunit.Sdk.DoesNotThrowException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotThrowException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotThrowException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimDoesNotThrowException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDoesNotThrowException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDoesNotThrowException.ConstructorException">
            <summary>Sets the shim of DoesNotThrowException.DoesNotThrowException(Exception actual)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDoesNotThrowException.StackTraceGet">
            <summary>Sets the shim of DoesNotThrowException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimDoesNotThrowException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimDoesNotThrowException.AllInstances.StackTraceGet">
            <summary>Sets the shim of DoesNotThrowException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimEmptyException">
            <summary>Shim type of Xunit.Sdk.EmptyException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEmptyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEmptyException.#ctor(Xunit.Sdk.EmptyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEmptyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEmptyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEmptyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimEmptyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimEmptyException.Constructor">
            <summary>Sets the shim of EmptyException.EmptyException()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimEmptyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimEqualException">
            <summary>Shim type of Xunit.Sdk.EqualException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEqualException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEqualException.#ctor(Xunit.Sdk.EqualException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEqualException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEqualException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimEqualException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimEqualException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimEqualException.ConstructorObjectObject">
            <summary>Sets the shim of EqualException.EqualException(Object expected, Object actual)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimEqualException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand">
            <summary>Shim type of Xunit.Sdk.ExceptionAndOutputCaptureCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.#ctor(Xunit.Sdk.ExceptionAndOutputCaptureCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.ConstructorITestCommandIMethodInfo">
            <summary>Sets the shim of ExceptionAndOutputCaptureCommand.ExceptionAndOutputCaptureCommand(ITestCommand innerCommand, IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.ExecuteObject">
            <summary>Sets the shim of ExceptionAndOutputCaptureCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionAndOutputCaptureCommand.AllInstances.ExecuteObject">
            <summary>Sets the shim of ExceptionAndOutputCaptureCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExceptionUtility">
            <summary>Shim type of Xunit.Sdk.ExceptionUtility</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExceptionUtility.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExceptionUtility.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExceptionUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionUtility.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionUtility.GetMessageException">
            <summary>Sets the shim of ExceptionUtility.GetMessage(Exception ex)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionUtility.GetMessageExceptionInt32">
            <summary>Sets the shim of ExceptionUtility.GetMessage(Exception ex, Int32 level)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionUtility.GetStackTraceException">
            <summary>Sets the shim of ExceptionUtility.GetStackTrace(Exception ex)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExceptionUtility.RethrowWithNoStackTraceLossException">
            <summary>Sets the shim of ExceptionUtility.RethrowWithNoStackTraceLoss(Exception ex)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor">
            <summary>Shim type of Xunit.Sdk.Executor</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.#ctor(Xunit.Sdk.Executor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ConstructorString">
            <summary>Sets the shim of Executor.Executor(String assemblyFilename)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.InitializeLifetimeService">
            <summary>Sets the shim of Executor.InitializeLifetimeService()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.OnTestResultITestResultExecutorCallback">
            <summary>Sets the shim of Executor.OnTestResult(ITestResult result, ExecutorCallback callback)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.OnTestStartITestCommandExecutorCallback">
            <summary>Sets the shim of Executor.OnTestStart(ITestCommand command, ExecutorCallback callback)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.RunOnSTAThreadThreadStart">
            <summary>Sets the shim of Executor.RunOnSTAThread(ThreadStart threadStart)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of Executor.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount">
            <summary>Shim type of Xunit.Sdk.Executor+AssemblyTestCount</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.#ctor(Xunit.Sdk.Executor.AssemblyTestCount)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.ConstructorExecutorObject">
            <summary>Sets the shim of AssemblyTestCount.AssemblyTestCount(Executor executor, Object _handler)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.InitializeLifetimeService">
            <summary>Sets the shim of AssemblyTestCount.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimAssemblyTestCount.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of AssemblyTestCount.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests">
            <summary>Shim type of Xunit.Sdk.Executor+EnumerateTests</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.#ctor(Xunit.Sdk.Executor.EnumerateTests)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.ConstructorExecutorObject">
            <summary>Sets the shim of EnumerateTests.EnumerateTests(Executor executor, Object _handler)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.InitializeLifetimeService">
            <summary>Sets the shim of EnumerateTests.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimEnumerateTests.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of EnumerateTests.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly">
            <summary>Shim type of Xunit.Sdk.Executor+RunAssembly</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.#ctor(Xunit.Sdk.Executor.RunAssembly)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.ConstructorExecutorObject">
            <summary>Sets the shim of RunAssembly.RunAssembly(Executor executor, Object _handler)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.InitializeLifetimeService">
            <summary>Sets the shim of RunAssembly.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunAssembly.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of RunAssembly.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass">
            <summary>Shim type of Xunit.Sdk.Executor+RunClass</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.#ctor(Xunit.Sdk.Executor.RunClass)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.ConstructorExecutorStringObject">
            <summary>Sets the shim of RunClass.RunClass(Executor executor, String _type, Object _handler)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.InitializeLifetimeService">
            <summary>Sets the shim of RunClass.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunClass.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of RunClass.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest">
            <summary>Shim type of Xunit.Sdk.Executor+RunTest</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.#ctor(Xunit.Sdk.Executor.RunTest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.ConstructorExecutorStringStringObject">
            <summary>Sets the shim of RunTest.RunTest(Executor executor, String _type, String _method, Object _handler)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.InitializeLifetimeService">
            <summary>Sets the shim of RunTest.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTest.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of RunTest.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests">
            <summary>Shim type of Xunit.Sdk.Executor+RunTests</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.#ctor(Xunit.Sdk.Executor.RunTests)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.ConstructorExecutorStringListOfStringObject">
            <summary>Sets the shim of RunTests.RunTests(Executor executor, String _type, List`1&lt;String&gt; _methods, Object _handler)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.InitializeLifetimeService">
            <summary>Sets the shim of RunTests.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutor.ShimRunTests.AllInstances.InitializeLifetimeService">
            <summary>Sets the shim of RunTests.InitializeLifetimeService()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutorCallback">
            <summary>Shim type of Xunit.Sdk.ExecutorCallback</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutorCallback.#ctor(Xunit.Sdk.ExecutorCallback)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutorCallback.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimExecutorCallback.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutorCallback.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutorCallback.Constructor">
            <summary>Sets the shim of ExecutorCallback.ExecutorCallback()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutorCallback.StaticConstructor">
            <summary>Sets the shim of ExecutorCallback.ExecutorCallback()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimExecutorCallback.WrapObject">
            <summary>Sets the shim of ExecutorCallback.Wrap(Object handler)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimExecutorCallback.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimFactCommand">
            <summary>Shim type of Xunit.Sdk.FactCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFactCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFactCommand.#ctor(Xunit.Sdk.FactCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFactCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFactCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFactCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFactCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFactCommand.ConstructorIMethodInfo">
            <summary>Sets the shim of FactCommand.FactCommand(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFactCommand.ExecuteObject">
            <summary>Sets the shim of FactCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimFactCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFactCommand.AllInstances.ExecuteObject">
            <summary>Sets the shim of FactCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimFailedResult">
            <summary>Shim type of Xunit.Sdk.FailedResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFailedResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFailedResult.#ctor(Xunit.Sdk.FailedResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFailedResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFailedResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFailedResult.Bind(Xunit.Sdk.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.ConstructorIMethodInfoExceptionString">
            <summary>Sets the shim of FailedResult.FailedResult(IMethodInfo method, Exception exception, String displayName)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.ConstructorStringStringStringMultiValueDictionaryOfStringStringStringStringString">
            <summary>Sets the shim of FailedResult.FailedResult(String methodName, String typeName, String displayName, MultiValueDictionary`2&lt;String,String&gt; traits, String exceptionType, String message, String stackTrace)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.ExceptionTypeGet">
            <summary>Sets the shim of FailedResult.get_ExceptionType()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.ExceptionTypeSetString">
            <summary>Sets the shim of FailedResult.set_ExceptionType(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.MessageGet">
            <summary>Sets the shim of FailedResult.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.MessageSetString">
            <summary>Sets the shim of FailedResult.set_Message(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.StackTraceGet">
            <summary>Sets the shim of FailedResult.get_StackTrace()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.StackTraceSetString">
            <summary>Sets the shim of FailedResult.set_StackTrace(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.ToXmlXmlNode">
            <summary>Sets the shim of FailedResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimFailedResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.AllInstances.ExceptionTypeGet">
            <summary>Sets the shim of FailedResult.get_ExceptionType()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.AllInstances.ExceptionTypeSetString">
            <summary>Sets the shim of FailedResult.set_ExceptionType(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.AllInstances.MessageGet">
            <summary>Sets the shim of FailedResult.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.AllInstances.MessageSetString">
            <summary>Sets the shim of FailedResult.set_Message(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.AllInstances.StackTraceGet">
            <summary>Sets the shim of FailedResult.get_StackTrace()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.AllInstances.StackTraceSetString">
            <summary>Sets the shim of FailedResult.set_StackTrace(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFailedResult.AllInstances.ToXmlXmlNode">
            <summary>Sets the shim of FailedResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimFalseException">
            <summary>Shim type of Xunit.Sdk.FalseException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFalseException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFalseException.#ctor(Xunit.Sdk.FalseException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFalseException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFalseException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFalseException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFalseException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFalseException.ConstructorString">
            <summary>Sets the shim of FalseException.FalseException(String userMessage)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimFalseException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimFixtureCommand">
            <summary>Shim type of Xunit.Sdk.FixtureCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFixtureCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFixtureCommand.#ctor(Xunit.Sdk.FixtureCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFixtureCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFixtureCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimFixtureCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFixtureCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFixtureCommand.ConstructorITestCommandDictionaryOfMethodInfoObject">
            <summary>Sets the shim of FixtureCommand.FixtureCommand(ITestCommand innerCommand, Dictionary`2&lt;MethodInfo,Object&gt; fixtures)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFixtureCommand.ExecuteObject">
            <summary>Sets the shim of FixtureCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimFixtureCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimFixtureCommand.AllInstances.ExecuteObject">
            <summary>Sets the shim of FixtureCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimGuard">
            <summary>Shim type of Xunit.Sdk.Guard</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimGuard.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimGuard.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimGuard.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimGuard.ArgumentNotNullOrEmptyStringIEnumerable">
            <summary>Sets the shim of Guard.ArgumentNotNullOrEmpty(String argName, IEnumerable argValue)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimGuard.ArgumentNotNullStringObject">
            <summary>Sets the shim of Guard.ArgumentNotNull(String argName, Object argValue)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimGuard.ArgumentValidStringStringBoolean">
            <summary>Sets the shim of Guard.ArgumentValid(String argName, String message, Boolean test)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimGuard.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimInRangeException">
            <summary>Shim type of Xunit.Sdk.InRangeException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimInRangeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimInRangeException.#ctor(Xunit.Sdk.InRangeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimInRangeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimInRangeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimInRangeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.ActualGet">
            <summary>Sets the shim of InRangeException.get_Actual()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.ConstructorObjectObjectObject">
            <summary>Sets the shim of InRangeException.InRangeException(Object actual, Object low, Object high)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.HighGet">
            <summary>Sets the shim of InRangeException.get_High()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.LowGet">
            <summary>Sets the shim of InRangeException.get_Low()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.MessageGet">
            <summary>Sets the shim of InRangeException.get_Message()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimInRangeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.AllInstances.ActualGet">
            <summary>Sets the shim of InRangeException.get_Actual()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.AllInstances.HighGet">
            <summary>Sets the shim of InRangeException.get_High()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.AllInstances.LowGet">
            <summary>Sets the shim of InRangeException.get_Low()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimInRangeException.AllInstances.MessageGet">
            <summary>Sets the shim of InRangeException.get_Message()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimIsAssignableFromException">
            <summary>Shim type of Xunit.Sdk.IsAssignableFromException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsAssignableFromException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsAssignableFromException.#ctor(Xunit.Sdk.IsAssignableFromException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsAssignableFromException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsAssignableFromException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsAssignableFromException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimIsAssignableFromException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimIsAssignableFromException.ConstructorTypeObject">
            <summary>Sets the shim of IsAssignableFromException.IsAssignableFromException(Type expected, Object actual)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimIsAssignableFromException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimIsNotTypeException">
            <summary>Shim type of Xunit.Sdk.IsNotTypeException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsNotTypeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsNotTypeException.#ctor(Xunit.Sdk.IsNotTypeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsNotTypeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsNotTypeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsNotTypeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimIsNotTypeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimIsNotTypeException.ConstructorTypeObject">
            <summary>Sets the shim of IsNotTypeException.IsNotTypeException(Type expected, Object actual)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimIsNotTypeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimIsTypeException">
            <summary>Shim type of Xunit.Sdk.IsTypeException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsTypeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsTypeException.#ctor(Xunit.Sdk.IsTypeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsTypeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsTypeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimIsTypeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimIsTypeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimIsTypeException.ConstructorTypeObject">
            <summary>Sets the shim of IsTypeException.IsTypeException(Type expected, Object actual)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimIsTypeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimLifetimeCommand">
            <summary>Shim type of Xunit.Sdk.LifetimeCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimLifetimeCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimLifetimeCommand.#ctor(Xunit.Sdk.LifetimeCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimLifetimeCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimLifetimeCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimLifetimeCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimLifetimeCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimLifetimeCommand.ConstructorITestCommandIMethodInfo">
            <summary>Sets the shim of LifetimeCommand.LifetimeCommand(ITestCommand innerCommand, IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimLifetimeCommand.ExecuteObject">
            <summary>Sets the shim of LifetimeCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimLifetimeCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimLifetimeCommand.AllInstances.ExecuteObject">
            <summary>Sets the shim of LifetimeCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimMethodResult">
            <summary>Shim type of Xunit.Sdk.MethodResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMethodResult.#ctor(Xunit.Sdk.MethodResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMethodResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMethodResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMethodResult.Bind(Xunit.Sdk.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AddTraitsXmlNode">
            <summary>Sets the shim of MethodResult.AddTraits(XmlNode testNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.ConstructorIMethodInfoString">
            <summary>Sets the shim of MethodResult.MethodResult(IMethodInfo method, String displayName)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.ConstructorStringStringStringMultiValueDictionaryOfStringString">
            <summary>Sets the shim of MethodResult.MethodResult(String methodName, String typeName, String displayName, MultiValueDictionary`2&lt;String,String&gt; traits)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.DisplayNameGet">
            <summary>Sets the shim of MethodResult.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.DisplayNameSetString">
            <summary>Sets the shim of MethodResult.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.MethodNameGet">
            <summary>Sets the shim of MethodResult.get_MethodName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.MethodNameSetString">
            <summary>Sets the shim of MethodResult.set_MethodName(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.OutputGet">
            <summary>Sets the shim of MethodResult.get_Output()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.OutputSetString">
            <summary>Sets the shim of MethodResult.set_Output(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.ToXmlXmlNode">
            <summary>Sets the shim of MethodResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.TraitsGet">
            <summary>Sets the shim of MethodResult.get_Traits()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.TraitsSetMultiValueDictionaryOfStringString">
            <summary>Sets the shim of MethodResult.set_Traits(MultiValueDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.TypeNameGet">
            <summary>Sets the shim of MethodResult.get_TypeName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.TypeNameSetString">
            <summary>Sets the shim of MethodResult.set_TypeName(String value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.AddTraitsXmlNode">
            <summary>Sets the shim of MethodResult.AddTraits(XmlNode testNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.DisplayNameGet">
            <summary>Sets the shim of MethodResult.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of MethodResult.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.MethodNameGet">
            <summary>Sets the shim of MethodResult.get_MethodName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.MethodNameSetString">
            <summary>Sets the shim of MethodResult.set_MethodName(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.OutputGet">
            <summary>Sets the shim of MethodResult.get_Output()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.OutputSetString">
            <summary>Sets the shim of MethodResult.set_Output(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.ToXmlXmlNode">
            <summary>Sets the shim of MethodResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.TraitsGet">
            <summary>Sets the shim of MethodResult.get_Traits()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.TraitsSetMultiValueDictionaryOfStringString">
            <summary>Sets the shim of MethodResult.set_Traits(MultiValueDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.TypeNameGet">
            <summary>Sets the shim of MethodResult.get_TypeName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodResult.AllInstances.TypeNameSetString">
            <summary>Sets the shim of MethodResult.set_TypeName(String value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimMethodUtility">
            <summary>Shim type of Xunit.Sdk.MethodUtility</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMethodUtility.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMethodUtility.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMethodUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.GetDisplayNameIMethodInfo">
            <summary>Sets the shim of MethodUtility.GetDisplayName(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.GetSkipReasonIMethodInfo">
            <summary>Sets the shim of MethodUtility.GetSkipReason(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.GetTestCommandsIMethodInfo">
            <summary>Sets the shim of MethodUtility.GetTestCommands(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.GetTimeoutParameterIMethodInfo">
            <summary>Sets the shim of MethodUtility.GetTimeoutParameter(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.GetTraitsIMethodInfo">
            <summary>Sets the shim of MethodUtility.GetTraits(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.HasTimeoutIMethodInfo">
            <summary>Sets the shim of MethodUtility.HasTimeout(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.HasTraitsIMethodInfo">
            <summary>Sets the shim of MethodUtility.HasTraits(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.IsSkipIMethodInfo">
            <summary>Sets the shim of MethodUtility.IsSkip(IMethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMethodUtility.IsTestIMethodInfo">
            <summary>Sets the shim of MethodUtility.IsTest(IMethodInfo method)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2">
            <summary>Shim type of Xunit.Sdk.MultiValueDictionary`2</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.#ctor(Xunit.Sdk.MultiValueDictionary{`0,`1})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AddValueT0T1">
            <summary>Sets the shim of MultiValueDictionary`2.AddValue(!0 key, !1 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.Clear">
            <summary>Sets the shim of MultiValueDictionary`2.Clear()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.Constructor">
            <summary>Sets the shim of MultiValueDictionary`2.MultiValueDictionary`2()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.ContainsT0T1">
            <summary>Sets the shim of MultiValueDictionary`2.Contains(!0 key, !1 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.CountGet">
            <summary>Sets the shim of MultiValueDictionary`2.get_Count()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.ForEachMultiValueDictionaryForEachDelegateOfT0T1">
            <summary>Sets the shim of MultiValueDictionary`2.ForEach(ForEachDelegate&lt;!0,!1&gt; code)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.ItemGetT0">
            <summary>Sets the shim of MultiValueDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.KeysGet">
            <summary>Sets the shim of MultiValueDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.RemoveT0">
            <summary>Sets the shim of MultiValueDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.RemoveValueT0T1">
            <summary>Sets the shim of MultiValueDictionary`2.RemoveValue(!0 key, !1 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.SystemCollectionsGenericIEnumerableTKeyGetEnumerator">
            <summary>Sets the shim of MultiValueDictionary`2.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of MultiValueDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.AddValueT0T1">
            <summary>Sets the shim of MultiValueDictionary`2.AddValue(!0 key, !1 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.Clear">
            <summary>Sets the shim of MultiValueDictionary`2.Clear()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.ContainsT0T1">
            <summary>Sets the shim of MultiValueDictionary`2.Contains(!0 key, !1 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.CountGet">
            <summary>Sets the shim of MultiValueDictionary`2.get_Count()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.ForEachMultiValueDictionaryForEachDelegateOfT0T1">
            <summary>Sets the shim of MultiValueDictionary`2.ForEach(ForEachDelegate&lt;!0,!1&gt; code)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.ItemGetT0">
            <summary>Sets the shim of MultiValueDictionary`2.get_Item(!0 key)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.KeysGet">
            <summary>Sets the shim of MultiValueDictionary`2.get_Keys()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.RemoveT0">
            <summary>Sets the shim of MultiValueDictionary`2.Remove(!0 key)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.RemoveValueT0T1">
            <summary>Sets the shim of MultiValueDictionary`2.RemoveValue(!0 key, !1 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.SystemCollectionsGenericIEnumerableTKeyGetEnumerator">
            <summary>Sets the shim of MultiValueDictionary`2.System.Collections.Generic.IEnumerable&lt;TKey&gt;.GetEnumerator()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimMultiValueDictionary`2.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of MultiValueDictionary`2.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotEmptyException">
            <summary>Shim type of Xunit.Sdk.NotEmptyException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEmptyException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEmptyException.#ctor(Xunit.Sdk.NotEmptyException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEmptyException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEmptyException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEmptyException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotEmptyException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotEmptyException.Constructor">
            <summary>Sets the shim of NotEmptyException.NotEmptyException()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotEmptyException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotEqualException">
            <summary>Shim type of Xunit.Sdk.NotEqualException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEqualException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEqualException.#ctor(Xunit.Sdk.NotEqualException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEqualException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEqualException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotEqualException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotEqualException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotEqualException.Constructor">
            <summary>Sets the shim of NotEqualException.NotEqualException()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotEqualException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotInRangeException">
            <summary>Shim type of Xunit.Sdk.NotInRangeException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotInRangeException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotInRangeException.#ctor(Xunit.Sdk.NotInRangeException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotInRangeException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotInRangeException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotInRangeException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.ActualGet">
            <summary>Sets the shim of NotInRangeException.get_Actual()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.ConstructorObjectObjectObject">
            <summary>Sets the shim of NotInRangeException.NotInRangeException(Object actual, Object low, Object high)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.HighGet">
            <summary>Sets the shim of NotInRangeException.get_High()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.LowGet">
            <summary>Sets the shim of NotInRangeException.get_Low()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.MessageGet">
            <summary>Sets the shim of NotInRangeException.get_Message()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotInRangeException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.AllInstances.ActualGet">
            <summary>Sets the shim of NotInRangeException.get_Actual()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.AllInstances.HighGet">
            <summary>Sets the shim of NotInRangeException.get_High()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.AllInstances.LowGet">
            <summary>Sets the shim of NotInRangeException.get_Low()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotInRangeException.AllInstances.MessageGet">
            <summary>Sets the shim of NotInRangeException.get_Message()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotNullException">
            <summary>Shim type of Xunit.Sdk.NotNullException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotNullException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotNullException.#ctor(Xunit.Sdk.NotNullException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotNullException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotNullException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotNullException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotNullException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotNullException.Constructor">
            <summary>Sets the shim of NotNullException.NotNullException()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotNullException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotSameException">
            <summary>Shim type of Xunit.Sdk.NotSameException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotSameException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotSameException.#ctor(Xunit.Sdk.NotSameException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotSameException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotSameException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNotSameException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotSameException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNotSameException.Constructor">
            <summary>Sets the shim of NotSameException.NotSameException()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNotSameException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNullException">
            <summary>Shim type of Xunit.Sdk.NullException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNullException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNullException.#ctor(Xunit.Sdk.NullException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNullException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNullException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimNullException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNullException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimNullException.ConstructorObject">
            <summary>Sets the shim of NullException.NullException(Object actual)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimNullException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimParamterCountMismatchException">
            <summary>Shim type of Xunit.Sdk.ParamterCountMismatchException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimParamterCountMismatchException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimParamterCountMismatchException.#ctor(Xunit.Sdk.ParamterCountMismatchException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimParamterCountMismatchException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimParamterCountMismatchException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimParamterCountMismatchException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimParamterCountMismatchException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimParamterCountMismatchException.Constructor">
            <summary>Sets the shim of ParamterCountMismatchException.ParamterCountMismatchException()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimParamterCountMismatchException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimPassedResult">
            <summary>Shim type of Xunit.Sdk.PassedResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimPassedResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimPassedResult.#ctor(Xunit.Sdk.PassedResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimPassedResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimPassedResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimPassedResult.Bind(Xunit.Sdk.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimPassedResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimPassedResult.ConstructorIMethodInfoString">
            <summary>Sets the shim of PassedResult.PassedResult(IMethodInfo method, String displayName)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimPassedResult.ConstructorStringStringStringMultiValueDictionaryOfStringString">
            <summary>Sets the shim of PassedResult.PassedResult(String methodName, String typeName, String displayName, MultiValueDictionary`2&lt;String,String&gt; traits)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimPassedResult.ToXmlXmlNode">
            <summary>Sets the shim of PassedResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimPassedResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimPassedResult.AllInstances.ToXmlXmlNode">
            <summary>Sets the shim of PassedResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimReflector">
            <summary>Shim type of Xunit.Sdk.Reflector</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimReflector.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimReflector.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimReflector.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimReflector.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimReflector.WrapAttribute">
            <summary>Sets the shim of Reflector.Wrap(Attribute attribute)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimReflector.WrapMethodInfo">
            <summary>Sets the shim of Reflector.Wrap(MethodInfo method)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimReflector.WrapType">
            <summary>Sets the shim of Reflector.Wrap(Type type)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimSameException">
            <summary>Shim type of Xunit.Sdk.SameException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSameException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSameException.#ctor(Xunit.Sdk.SameException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSameException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSameException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSameException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSameException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSameException.ConstructorObjectObject">
            <summary>Sets the shim of SameException.SameException(Object expected, Object actual)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimSameException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimSingleException">
            <summary>Shim type of Xunit.Sdk.SingleException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSingleException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSingleException.#ctor(Xunit.Sdk.SingleException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSingleException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSingleException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSingleException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSingleException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSingleException.ConstructorInt32">
            <summary>Sets the shim of SingleException.SingleException(Int32 count)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimSingleException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimSkipCommand">
            <summary>Shim type of Xunit.Sdk.SkipCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipCommand.#ctor(Xunit.Sdk.SkipCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.ConstructorIMethodInfoStringString">
            <summary>Sets the shim of SkipCommand.SkipCommand(IMethodInfo testMethod, String displayName, String reason)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.ExecuteObject">
            <summary>Sets the shim of SkipCommand.Execute(Object testClass)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.ReasonGet">
            <summary>Sets the shim of SkipCommand.get_Reason()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.ReasonSetString">
            <summary>Sets the shim of SkipCommand.set_Reason(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.ShouldCreateInstanceGet">
            <summary>Sets the shim of SkipCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.ToStartXml">
            <summary>Sets the shim of SkipCommand.ToStartXml()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimSkipCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.AllInstances.ExecuteObject">
            <summary>Sets the shim of SkipCommand.Execute(Object testClass)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.AllInstances.ReasonGet">
            <summary>Sets the shim of SkipCommand.get_Reason()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.AllInstances.ReasonSetString">
            <summary>Sets the shim of SkipCommand.set_Reason(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.AllInstances.ShouldCreateInstanceGet">
            <summary>Sets the shim of SkipCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipCommand.AllInstances.ToStartXml">
            <summary>Sets the shim of SkipCommand.ToStartXml()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimSkipResult">
            <summary>Shim type of Xunit.Sdk.SkipResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipResult.#ctor(Xunit.Sdk.SkipResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimSkipResult.Bind(Xunit.Sdk.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.ConstructorIMethodInfoStringString">
            <summary>Sets the shim of SkipResult.SkipResult(IMethodInfo method, String displayName, String reason)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.ConstructorStringStringStringMultiValueDictionaryOfStringStringString">
            <summary>Sets the shim of SkipResult.SkipResult(String methodName, String typeName, String displayName, MultiValueDictionary`2&lt;String,String&gt; traits, String reason)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.ReasonGet">
            <summary>Sets the shim of SkipResult.get_Reason()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.ReasonSetString">
            <summary>Sets the shim of SkipResult.set_Reason(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.ToXmlXmlNode">
            <summary>Sets the shim of SkipResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimSkipResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.AllInstances.ReasonGet">
            <summary>Sets the shim of SkipResult.get_Reason()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.AllInstances.ReasonSetString">
            <summary>Sets the shim of SkipResult.set_Reason(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimSkipResult.AllInstances.ToXmlXmlNode">
            <summary>Sets the shim of SkipResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestClassCommand">
            <summary>Shim type of Xunit.Sdk.TestClassCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommand.#ctor(Xunit.Sdk.TestClassCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommand.Bind(Xunit.Sdk.ITestClassCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.ChooseNextTestICollectionOfIMethodInfo">
            <summary>Sets the shim of TestClassCommand.ChooseNextTest(ICollection`1&lt;IMethodInfo&gt; testsLeftToRun)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.ClassFinish">
            <summary>Sets the shim of TestClassCommand.ClassFinish()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.ClassStart">
            <summary>Sets the shim of TestClassCommand.ClassStart()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.Constructor">
            <summary>Sets the shim of TestClassCommand.TestClassCommand()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.ConstructorITypeInfo">
            <summary>Sets the shim of TestClassCommand.TestClassCommand(ITypeInfo typeUnderTest)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.ConstructorType">
            <summary>Sets the shim of TestClassCommand.TestClassCommand(Type typeUnderTest)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.EnumerateTestCommandsIMethodInfo">
            <summary>Sets the shim of TestClassCommand.EnumerateTestCommands(IMethodInfo testMethod)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.EnumerateTestMethods">
            <summary>Sets the shim of TestClassCommand.EnumerateTestMethods()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.IsTestMethodIMethodInfo">
            <summary>Sets the shim of TestClassCommand.IsTestMethod(IMethodInfo testMethod)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.ObjectUnderTestGet">
            <summary>Sets the shim of TestClassCommand.get_ObjectUnderTest()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.RandomizerGet">
            <summary>Sets the shim of TestClassCommand.get_Randomizer()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.RandomizerSetRandom">
            <summary>Sets the shim of TestClassCommand.set_Randomizer(Random value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.TypeUnderTestGet">
            <summary>Sets the shim of TestClassCommand.get_TypeUnderTest()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.TypeUnderTestSetITypeInfo">
            <summary>Sets the shim of TestClassCommand.set_TypeUnderTest(ITypeInfo value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.ChooseNextTestICollectionOfIMethodInfo">
            <summary>Sets the shim of TestClassCommand.ChooseNextTest(ICollection`1&lt;IMethodInfo&gt; testsLeftToRun)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.ClassFinish">
            <summary>Sets the shim of TestClassCommand.ClassFinish()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.ClassStart">
            <summary>Sets the shim of TestClassCommand.ClassStart()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.EnumerateTestCommandsIMethodInfo">
            <summary>Sets the shim of TestClassCommand.EnumerateTestCommands(IMethodInfo testMethod)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.EnumerateTestMethods">
            <summary>Sets the shim of TestClassCommand.EnumerateTestMethods()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.IsTestMethodIMethodInfo">
            <summary>Sets the shim of TestClassCommand.IsTestMethod(IMethodInfo testMethod)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.ObjectUnderTestGet">
            <summary>Sets the shim of TestClassCommand.get_ObjectUnderTest()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.RandomizerGet">
            <summary>Sets the shim of TestClassCommand.get_Randomizer()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.RandomizerSetRandom">
            <summary>Sets the shim of TestClassCommand.set_Randomizer(Random value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.TypeUnderTestGet">
            <summary>Sets the shim of TestClassCommand.get_TypeUnderTest()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommand.AllInstances.TypeUnderTestSetITypeInfo">
            <summary>Sets the shim of TestClassCommand.set_TypeUnderTest(ITypeInfo value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestClassCommandFactory">
            <summary>Shim type of Xunit.Sdk.TestClassCommandFactory</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.#ctor(Xunit.Sdk.TestClassCommandFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.Constructor">
            <summary>Sets the shim of TestClassCommandFactory.TestClassCommandFactory()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.MakeITypeInfo">
            <summary>Sets the shim of TestClassCommandFactory.Make(ITypeInfo typeInfo)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.MakeType">
            <summary>Sets the shim of TestClassCommandFactory.Make(Type type)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestClassCommandFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestClassCommandRunner">
            <summary>Shim type of Xunit.Sdk.TestClassCommandRunner</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommandRunner.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommandRunner.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestClassCommandRunner.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommandRunner.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestClassCommandRunner.ExecuteITestClassCommandListOfIMethodInfoPredicateOfITestCommandPredicateOfITestResult">
            <summary>Sets the shim of TestClassCommandRunner.Execute(ITestClassCommand testClassCommand, List`1&lt;IMethodInfo&gt; methods, Predicate`1&lt;ITestCommand&gt; startCallback, Predicate`1&lt;ITestResult&gt; resultCallback)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestCommand">
            <summary>Shim type of Xunit.Sdk.TestCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestCommand.#ctor(Xunit.Sdk.TestCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.ConstructorIMethodInfoStringInt32">
            <summary>Sets the shim of TestCommand.TestCommand(IMethodInfo method, String displayName, Int32 timeout)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.DisplayNameGet">
            <summary>Sets the shim of TestCommand.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.DisplayNameSetString">
            <summary>Sets the shim of TestCommand.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.MethodNameGet">
            <summary>Sets the shim of TestCommand.get_MethodName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.MethodNameSetString">
            <summary>Sets the shim of TestCommand.set_MethodName(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.ShouldCreateInstanceGet">
            <summary>Sets the shim of TestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.TimeoutGet">
            <summary>Sets the shim of TestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.TimeoutSetInt32">
            <summary>Sets the shim of TestCommand.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.ToStartXml">
            <summary>Sets the shim of TestCommand.ToStartXml()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.TypeNameGet">
            <summary>Sets the shim of TestCommand.get_TypeName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.TypeNameSetString">
            <summary>Sets the shim of TestCommand.set_TypeName(String value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.DisplayNameGet">
            <summary>Sets the shim of TestCommand.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.DisplayNameSetString">
            <summary>Sets the shim of TestCommand.set_DisplayName(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.MethodNameGet">
            <summary>Sets the shim of TestCommand.get_MethodName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.MethodNameSetString">
            <summary>Sets the shim of TestCommand.set_MethodName(String value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.ShouldCreateInstanceGet">
            <summary>Sets the shim of TestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.TimeoutGet">
            <summary>Sets the shim of TestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.TimeoutSetInt32">
            <summary>Sets the shim of TestCommand.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.ToStartXml">
            <summary>Sets the shim of TestCommand.ToStartXml()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.TypeNameGet">
            <summary>Sets the shim of TestCommand.get_TypeName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommand.AllInstances.TypeNameSetString">
            <summary>Sets the shim of TestCommand.set_TypeName(String value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestCommandFactory">
            <summary>Shim type of Xunit.Sdk.TestCommandFactory</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestCommandFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestCommandFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestCommandFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommandFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestCommandFactory.MakeITestClassCommandIMethodInfo">
            <summary>Sets the shim of TestCommandFactory.Make(ITestClassCommand classCommand, IMethodInfo method)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestResult">
            <summary>Shim type of Xunit.Sdk.TestResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestResult.#ctor(Xunit.Sdk.TestResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestResult.Bind(Xunit.Sdk.ITestResult)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestResult.AddTimeXmlNode">
            <summary>Sets the shim of TestResult.AddTime(XmlNode testNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestResult.Constructor">
            <summary>Sets the shim of TestResult.TestResult()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestResult.ExecutionTimeGet">
            <summary>Sets the shim of TestResult.get_ExecutionTime()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestResult.ExecutionTimeSetDouble">
            <summary>Sets the shim of TestResult.set_ExecutionTime(Double value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestResult.AllInstances.AddTimeXmlNode">
            <summary>Sets the shim of TestResult.AddTime(XmlNode testNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestResult.AllInstances.ExecutionTimeGet">
            <summary>Sets the shim of TestResult.get_ExecutionTime()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestResult.AllInstances.ExecutionTimeSetDouble">
            <summary>Sets the shim of TestResult.set_ExecutionTime(Double value)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestTimer">
            <summary>Shim type of Xunit.Sdk.TestTimer</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestTimer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestTimer.#ctor(Xunit.Sdk.TestTimer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestTimer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTestTimer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestTimer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestTimer.Constructor">
            <summary>Sets the shim of TestTimer.TestTimer()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestTimer.ElapsedMillisecondsGet">
            <summary>Sets the shim of TestTimer.get_ElapsedMilliseconds()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestTimer.Start">
            <summary>Sets the shim of TestTimer.Start()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestTimer.Stop">
            <summary>Sets the shim of TestTimer.Stop()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTestTimer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestTimer.AllInstances.ElapsedMillisecondsGet">
            <summary>Sets the shim of TestTimer.get_ElapsedMilliseconds()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestTimer.AllInstances.Start">
            <summary>Sets the shim of TestTimer.Start()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTestTimer.AllInstances.Stop">
            <summary>Sets the shim of TestTimer.Stop()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimThrowsException">
            <summary>Shim type of Xunit.Sdk.ThrowsException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimThrowsException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimThrowsException.#ctor(Xunit.Sdk.ThrowsException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimThrowsException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimThrowsException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimThrowsException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimThrowsException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimThrowsException.ConstructorType">
            <summary>Sets the shim of ThrowsException.ThrowsException(Type expectedType)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimThrowsException.ConstructorTypeException">
            <summary>Sets the shim of ThrowsException.ThrowsException(Type expectedType, Exception actual)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimThrowsException.ConstructorTypeStringStringString">
            <summary>Sets the shim of ThrowsException.ThrowsException(Type expected, String actual, String actualMessage, String stackTrace)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimThrowsException.StackTraceGet">
            <summary>Sets the shim of ThrowsException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimThrowsException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimThrowsException.AllInstances.StackTraceGet">
            <summary>Sets the shim of ThrowsException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTimedCommand">
            <summary>Shim type of Xunit.Sdk.TimedCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimedCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimedCommand.#ctor(Xunit.Sdk.TimedCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimedCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimedCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimedCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimedCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimedCommand.ConstructorITestCommand">
            <summary>Sets the shim of TimedCommand.TimedCommand(ITestCommand innerCommand)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimedCommand.ExecuteObject">
            <summary>Sets the shim of TimedCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTimedCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimedCommand.AllInstances.ExecuteObject">
            <summary>Sets the shim of TimedCommand.Execute(Object testClass)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTimeoutCommand">
            <summary>Shim type of Xunit.Sdk.TimeoutCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutCommand.#ctor(Xunit.Sdk.TimeoutCommand)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutCommand.Bind(Xunit.Sdk.ITestCommand)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimeoutCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimeoutCommand.ConstructorITestCommandInt32IMethodInfo">
            <summary>Sets the shim of TimeoutCommand.TimeoutCommand(ITestCommand innerCommand, Int32 timeout, IMethodInfo testMethod)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimeoutCommand.ExecuteObject">
            <summary>Sets the shim of TimeoutCommand.Execute(Object testClass)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimeoutCommand.TimeoutGet">
            <summary>Sets the shim of TimeoutCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTimeoutCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimeoutCommand.AllInstances.ExecuteObject">
            <summary>Sets the shim of TimeoutCommand.Execute(Object testClass)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimeoutCommand.AllInstances.TimeoutGet">
            <summary>Sets the shim of TimeoutCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTimeoutException">
            <summary>Shim type of Xunit.Sdk.TimeoutException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutException.#ctor(Xunit.Sdk.TimeoutException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTimeoutException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimeoutException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTimeoutException.ConstructorInt64">
            <summary>Sets the shim of TimeoutException.TimeoutException(Int64 timeout)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTimeoutException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTraceAssertException">
            <summary>Shim type of Xunit.Sdk.TraceAssertException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTraceAssertException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTraceAssertException.#ctor(Xunit.Sdk.TraceAssertException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTraceAssertException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTraceAssertException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTraceAssertException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.AssertDetailedMessageGet">
            <summary>Sets the shim of TraceAssertException.get_AssertDetailedMessage()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.AssertMessageGet">
            <summary>Sets the shim of TraceAssertException.get_AssertMessage()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.ConstructorString">
            <summary>Sets the shim of TraceAssertException.TraceAssertException(String assertMessage)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.ConstructorStringString">
            <summary>Sets the shim of TraceAssertException.TraceAssertException(String assertMessage, String assertDetailedMessage)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.MessageGet">
            <summary>Sets the shim of TraceAssertException.get_Message()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTraceAssertException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.AllInstances.AssertDetailedMessageGet">
            <summary>Sets the shim of TraceAssertException.get_AssertDetailedMessage()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.AllInstances.AssertMessageGet">
            <summary>Sets the shim of TraceAssertException.get_AssertMessage()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTraceAssertException.AllInstances.MessageGet">
            <summary>Sets the shim of TraceAssertException.get_Message()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTrueException">
            <summary>Shim type of Xunit.Sdk.TrueException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTrueException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTrueException.#ctor(Xunit.Sdk.TrueException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTrueException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTrueException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTrueException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTrueException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTrueException.ConstructorString">
            <summary>Sets the shim of TrueException.TrueException(String userMessage)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTrueException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimTypeUtility">
            <summary>Shim type of Xunit.Sdk.TypeUtility</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTypeUtility.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTypeUtility.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimTypeUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.ContainsTestMethodsITypeInfo">
            <summary>Sets the shim of TypeUtility.ContainsTestMethods(ITypeInfo type)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.GetRunWithITypeInfo">
            <summary>Sets the shim of TypeUtility.GetRunWith(ITypeInfo type)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.GetTestMethodsITypeInfo">
            <summary>Sets the shim of TypeUtility.GetTestMethods(ITypeInfo type)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.HasRunWithITypeInfo">
            <summary>Sets the shim of TypeUtility.HasRunWith(ITypeInfo type)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.ImplementsITestClassCommandITypeInfo">
            <summary>Sets the shim of TypeUtility.ImplementsITestClassCommand(ITypeInfo type)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.IsAbstractITypeInfo">
            <summary>Sets the shim of TypeUtility.IsAbstract(ITypeInfo type)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.IsStaticITypeInfo">
            <summary>Sets the shim of TypeUtility.IsStatic(ITypeInfo type)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimTypeUtility.IsTestClassITypeInfo">
            <summary>Sets the shim of TypeUtility.IsTestClass(ITypeInfo type)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimXmlUtility">
            <summary>Shim type of Xunit.Sdk.XmlUtility</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimXmlUtility.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimXmlUtility.#ctor(Xunit.Sdk.XmlUtility)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimXmlUtility.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.ShimXmlUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimXmlUtility.AddAttributeXmlNodeStringObject">
            <summary>Sets the shim of XmlUtility.AddAttribute(XmlNode node, String name, Object value)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimXmlUtility.AddElementXmlNodeString">
            <summary>Sets the shim of XmlUtility.AddElement(XmlNode parentNode, String name)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimXmlUtility.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.ShimXmlUtility.Constructor">
            <summary>Sets the shim of XmlUtility.XmlUtility()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.ShimXmlUtility.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubAfterTestException">
            <summary>Stub type of Xunit.Sdk.AfterTestException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAfterTestException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAfterTestException.#ctor(System.Exception[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAfterTestException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAfterTestException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAfterTestException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAfterTestException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAfterTestException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAfterTestException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAfterTestException.InitializeStub">
            <summary>Initializes a new instance of type StubAfterTestException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.MessageGet">
            <summary>Sets the stub of AfterTestException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.StackTraceGet">
            <summary>Sets the stub of AfterTestException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAfterTestException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAfterTestException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAfterTestException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAfterTestException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAfterTestException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAfterTestException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAfterTestException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAfterTestException.Message">
            <summary>Sets the stub of AfterTestException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAfterTestException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAfterTestException.StackTrace">
            <summary>Sets the stub of AfterTestException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubAssemblyResult">
            <summary>Stub type of Xunit.Sdk.AssemblyResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssemblyResult.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssemblyResult.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssemblyResult.Add(Xunit.Sdk.ITestResult)">
            <summary>Sets the stub of CompositeResult.Add(ITestResult testResult)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssemblyResult.AddITestResult">
            <summary>Sets the stub of CompositeResult.Add(ITestResult testResult)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssemblyResult.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssemblyResult.ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of AssemblyResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssemblyResult.ToXmlXmlNode">
            <summary>Sets the stub of AssemblyResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssemblyResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssemblyResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssemblyResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubAssertActualExpectedException">
            <summary>Stub type of Xunit.Sdk.AssertActualExpectedException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertActualExpectedException.#ctor(System.Object,System.Object,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertActualExpectedException.#ctor(System.Object,System.Object,System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertActualExpectedException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAssertActualExpectedException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertActualExpectedException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAssertActualExpectedException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertActualExpectedException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertActualExpectedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertActualExpectedException.InitializeStub">
            <summary>Initializes a new instance of type StubAssertActualExpectedException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertActualExpectedException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertActualExpectedException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertActualExpectedException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertActualExpectedException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertActualExpectedException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertActualExpectedException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertActualExpectedException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertActualExpectedException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertActualExpectedException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertActualExpectedException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubAssertException">
            <summary>Stub type of Xunit.Sdk.AssertException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubAssertException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubAssertException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.InitializeStub">
            <summary>Initializes a new instance of type StubAssertException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubAssertException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubAssertException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubAssertException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubBeforeAfterCommand">
            <summary>Stub type of Xunit.Sdk.BeforeAfterCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubBeforeAfterCommand.#ctor(Xunit.Sdk.ITestCommand,System.Reflection.MethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubBeforeAfterCommand.Execute(System.Object)">
            <summary>Sets the stub of BeforeAfterCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubBeforeAfterCommand.ExecuteObject">
            <summary>Sets the stub of BeforeAfterCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubBeforeAfterCommand.InitializeStub">
            <summary>Initializes a new instance of type StubBeforeAfterCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubBeforeAfterCommand.TimeoutGet">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubBeforeAfterCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubBeforeAfterCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubBeforeAfterCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubBeforeAfterCommand.Timeout">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubClassResult">
            <summary>Stub type of Xunit.Sdk.ClassResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubClassResult.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubClassResult.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubClassResult.Add(Xunit.Sdk.ITestResult)">
            <summary>Sets the stub of CompositeResult.Add(ITestResult testResult)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubClassResult.AddITestResult">
            <summary>Sets the stub of CompositeResult.Add(ITestResult testResult)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubClassResult.InitializeStub">
            <summary>Initializes a new instance of type StubClassResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubClassResult.ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of ClassResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubClassResult.ToXmlXmlNode">
            <summary>Sets the stub of ClassResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubClassResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubClassResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubClassResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubCompositeResult">
            <summary>Stub type of Xunit.Sdk.CompositeResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubCompositeResult.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubCompositeResult.Add(Xunit.Sdk.ITestResult)">
            <summary>Sets the stub of CompositeResult.Add(ITestResult testResult)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubCompositeResult.AddITestResult">
            <summary>Sets the stub of CompositeResult.Add(ITestResult testResult)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubCompositeResult.InitializeStub">
            <summary>Initializes a new instance of type StubCompositeResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubCompositeResult.ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of TestResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubCompositeResult.ToXmlXmlNode">
            <summary>Sets the stub of TestResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubCompositeResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubCompositeResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubCompositeResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubContainsException">
            <summary>Stub type of Xunit.Sdk.ContainsException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubContainsException.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubContainsException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubContainsException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubContainsException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubContainsException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubContainsException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubContainsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubContainsException.InitializeStub">
            <summary>Initializes a new instance of type StubContainsException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubContainsException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubContainsException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubContainsException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubContainsException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubContainsException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubContainsException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubContainsException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubContainsException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubContainsException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubContainsException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubDelegatingTestCommand">
            <summary>Stub type of Xunit.Sdk.DelegatingTestCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDelegatingTestCommand.#ctor(Xunit.Sdk.ITestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDelegatingTestCommand.Execute(System.Object)">
            <summary>Sets the stub of DelegatingTestCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDelegatingTestCommand.ExecuteObject">
            <summary>Sets the stub of DelegatingTestCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDelegatingTestCommand.InitializeStub">
            <summary>Initializes a new instance of type StubDelegatingTestCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDelegatingTestCommand.TimeoutGet">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDelegatingTestCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDelegatingTestCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDelegatingTestCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDelegatingTestCommand.Timeout">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubDoesNotContainException">
            <summary>Stub type of Xunit.Sdk.DoesNotContainException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotContainException.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotContainException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDoesNotContainException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotContainException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDoesNotContainException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotContainException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotContainException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotContainException.InitializeStub">
            <summary>Initializes a new instance of type StubDoesNotContainException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotContainException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotContainException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotContainException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotContainException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotContainException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotContainException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotContainException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotContainException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotContainException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotContainException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubDoesNotThrowException">
            <summary>Stub type of Xunit.Sdk.DoesNotThrowException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotThrowException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotThrowException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubDoesNotThrowException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotThrowException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubDoesNotThrowException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotThrowException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotThrowException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotThrowException.InitializeStub">
            <summary>Initializes a new instance of type StubDoesNotThrowException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.StackTraceGet">
            <summary>Sets the stub of DoesNotThrowException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubDoesNotThrowException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubDoesNotThrowException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotThrowException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotThrowException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotThrowException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotThrowException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotThrowException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotThrowException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotThrowException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubDoesNotThrowException.StackTrace">
            <summary>Sets the stub of DoesNotThrowException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubEmptyException">
            <summary>Stub type of Xunit.Sdk.EmptyException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEmptyException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEmptyException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEmptyException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEmptyException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEmptyException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEmptyException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEmptyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEmptyException.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEmptyException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEmptyException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEmptyException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEmptyException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEmptyException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEmptyException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEmptyException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEmptyException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEmptyException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEmptyException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubEqualException">
            <summary>Stub type of Xunit.Sdk.EqualException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEqualException.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEqualException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubEqualException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEqualException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubEqualException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEqualException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEqualException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEqualException.InitializeStub">
            <summary>Initializes a new instance of type StubEqualException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubEqualException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubEqualException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEqualException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEqualException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEqualException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEqualException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEqualException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEqualException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEqualException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubEqualException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand">
            <summary>Stub type of Xunit.Sdk.ExceptionAndOutputCaptureCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.#ctor(Xunit.Sdk.ITestCommand,Xunit.Sdk.IMethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.Execute(System.Object)">
            <summary>Sets the stub of ExceptionAndOutputCaptureCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.ExecuteObject">
            <summary>Sets the stub of ExceptionAndOutputCaptureCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.InitializeStub">
            <summary>Initializes a new instance of type StubExceptionAndOutputCaptureCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.TimeoutGet">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExceptionAndOutputCaptureCommand.Timeout">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubExecutor">
            <summary>Stub type of Xunit.Sdk.Executor</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExecutor.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExecutor.InitializeLifetimeService">
            <summary>Sets the stub of Executor.InitializeLifetimeService()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubExecutor.InitializeLifetimeService01">
            <summary>Sets the stub of Executor.InitializeLifetimeService()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExecutor.InitializeStub">
            <summary>Initializes a new instance of type StubExecutor</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExecutor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExecutor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExecutor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubExecutorCallback">
            <summary>Stub type of Xunit.Sdk.ExecutorCallback</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExecutorCallback.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExecutorCallback.InitializeStub">
            <summary>Initializes a new instance of type StubExecutorCallback</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExecutorCallback.Notify(System.String)">
            <summary>Sets the stub of ExecutorCallback.Notify(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubExecutorCallback.NotifyString">
            <summary>Sets the stub of ExecutorCallback.Notify(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubExecutorCallback.ShouldContinue">
            <summary>Sets the stub of ExecutorCallback.ShouldContinue()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubExecutorCallback.ShouldContinue01">
            <summary>Sets the stub of ExecutorCallback.ShouldContinue()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExecutorCallback.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExecutorCallback.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubExecutorCallback.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubFactCommand">
            <summary>Stub type of Xunit.Sdk.FactCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFactCommand.#ctor(Xunit.Sdk.IMethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFactCommand.AttachBackingFieldToTimeout">
            <summary>Attaches delegates to emulate StubFactCommand.Timeout as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFactCommand.Execute(System.Object)">
            <summary>Sets the stub of FactCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFactCommand.ExecuteObject">
            <summary>Sets the stub of FactCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFactCommand.InitializeStub">
            <summary>Initializes a new instance of type StubFactCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFactCommand.ShouldCreateInstanceGet">
            <summary>Sets the stub of TestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFactCommand.TimeoutGet">
            <summary>Sets the stub of TestCommand.get_Timeout()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFactCommand.TimeoutSetInt32">
            <summary>Sets the stub of TestCommand.set_Timeout(Int32 value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFactCommand.ToStartXml">
            <summary>Sets the stub of TestCommand.ToStartXml()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFactCommand.ToStartXml01">
            <summary>Sets the stub of TestCommand.ToStartXml()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFactCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFactCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFactCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFactCommand.ShouldCreateInstance">
            <summary>Sets the stub of TestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFactCommand.Timeout">
            <summary>Sets the stub of TestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubFailedResult">
            <summary>Stub type of Xunit.Sdk.FailedResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFailedResult.#ctor(Xunit.Sdk.IMethodInfo,System.Exception,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFailedResult.#ctor(System.String,System.String,System.String,Xunit.Sdk.MultiValueDictionary{System.String,System.String},System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFailedResult.InitializeStub">
            <summary>Initializes a new instance of type StubFailedResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFailedResult.ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of FailedResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFailedResult.ToXmlXmlNode">
            <summary>Sets the stub of FailedResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFailedResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFailedResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFailedResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubFalseException">
            <summary>Stub type of Xunit.Sdk.FalseException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFalseException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFalseException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubFalseException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFalseException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubFalseException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFalseException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFalseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFalseException.InitializeStub">
            <summary>Initializes a new instance of type StubFalseException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFalseException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFalseException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFalseException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFalseException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFalseException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFalseException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFalseException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFalseException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFalseException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFalseException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubFixtureCommand">
            <summary>Stub type of Xunit.Sdk.FixtureCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFixtureCommand.#ctor(Xunit.Sdk.ITestCommand,System.Collections.Generic.Dictionary{System.Reflection.MethodInfo,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFixtureCommand.Execute(System.Object)">
            <summary>Sets the stub of FixtureCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFixtureCommand.ExecuteObject">
            <summary>Sets the stub of FixtureCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubFixtureCommand.InitializeStub">
            <summary>Initializes a new instance of type StubFixtureCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubFixtureCommand.TimeoutGet">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFixtureCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFixtureCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFixtureCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubFixtureCommand.Timeout">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubIAttributeInfo">
            <summary>Stub type of Xunit.Sdk.IAttributeInfo</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIAttributeInfo.#ctor">
            <summary>Initializes a new instance of type StubIAttributeInfo</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIAttributeInfo.GetInstanceOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetInstance()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIAttributeInfo.GetPropertyValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>Sets stubs of GetPropertyValue(String propertyName)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIAttributeInfo.x4::Xunit#Sdk#IAttributeInfo#GetInstance``1">
            <summary>Sets the stub of IAttributeInfo.GetInstance()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIAttributeInfo.x4::Xunit#Sdk#IAttributeInfo#GetPropertyValue``1(System.String)">
            <summary>Sets the stub of IAttributeInfo.GetPropertyValue(String propertyName)</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubIMethodInfo">
            <summary>Stub type of Xunit.Sdk.IMethodInfo</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIMethodInfo.#ctor">
            <summary>Initializes a new instance of type StubIMethodInfo</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.CreateInstance">
            <summary>Sets the stub of IMethodInfo.CreateInstance()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.GetCustomAttributesType">
            <summary>Sets the stub of IMethodInfo.GetCustomAttributes(Type attributeType)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.HasAttributeType">
            <summary>Sets the stub of IMethodInfo.HasAttribute(Type attributeType)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.InvokeObjectObjectArray">
            <summary>Sets the stub of IMethodInfo.Invoke(Object testClass, Object[] parameters)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.IsAbstractGet">
            <summary>Sets the stub of IMethodInfo.get_IsAbstract()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.IsStaticGet">
            <summary>Sets the stub of IMethodInfo.get_IsStatic()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.MethodInfoGet">
            <summary>Sets the stub of IMethodInfo.get_MethodInfo()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.NameGet">
            <summary>Sets the stub of IMethodInfo.get_Name()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.ReturnTypeGet">
            <summary>Sets the stub of IMethodInfo.get_ReturnType()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIMethodInfo.TypeNameGet">
            <summary>Sets the stub of IMethodInfo.get_TypeName()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#CreateInstance">
            <summary>Sets the stub of IMethodInfo.CreateInstance()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#GetCustomAttributes(System.Type)">
            <summary>Sets the stub of IMethodInfo.GetCustomAttributes(Type attributeType)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#HasAttribute(System.Type)">
            <summary>Sets the stub of IMethodInfo.HasAttribute(Type attributeType)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#Invoke(System.Object,System.Object[])">
            <summary>Sets the stub of IMethodInfo.Invoke(Object testClass, Object[] parameters)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#IsAbstract">
            <summary>Sets the stub of IMethodInfo.get_IsAbstract()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#IsStatic">
            <summary>Sets the stub of IMethodInfo.get_IsStatic()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#MethodInfo">
            <summary>Sets the stub of IMethodInfo.get_MethodInfo()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#Name">
            <summary>Sets the stub of IMethodInfo.get_Name()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#ReturnType">
            <summary>Sets the stub of IMethodInfo.get_ReturnType()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIMethodInfo.x4::Xunit#Sdk#IMethodInfo#TypeName">
            <summary>Sets the stub of IMethodInfo.get_TypeName()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubITestClassCommand">
            <summary>Stub type of Xunit.Sdk.ITestClassCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestClassCommand.#ctor">
            <summary>Initializes a new instance of type StubITestClassCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestClassCommand.AttachBackingFieldToTypeUnderTest">
            <summary>Attaches delegates to emulate StubITestClassCommand.TypeUnderTest as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.ChooseNextTestICollectionOfIMethodInfo">
            <summary>Sets the stub of ITestClassCommand.ChooseNextTest(ICollection`1&lt;IMethodInfo&gt; testsLeftToRun)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.ClassFinish">
            <summary>Sets the stub of ITestClassCommand.ClassFinish()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.ClassStart">
            <summary>Sets the stub of ITestClassCommand.ClassStart()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.EnumerateTestCommandsIMethodInfo">
            <summary>Sets the stub of ITestClassCommand.EnumerateTestCommands(IMethodInfo testMethod)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.EnumerateTestMethods">
            <summary>Sets the stub of ITestClassCommand.EnumerateTestMethods()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.IsTestMethodIMethodInfo">
            <summary>Sets the stub of ITestClassCommand.IsTestMethod(IMethodInfo testMethod)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.ObjectUnderTestGet">
            <summary>Sets the stub of ITestClassCommand.get_ObjectUnderTest()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.TypeUnderTestGet">
            <summary>Sets the stub of ITestClassCommand.get_TypeUnderTest()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestClassCommand.TypeUnderTestSetITypeInfo">
            <summary>Sets the stub of ITestClassCommand.set_TypeUnderTest(ITypeInfo value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestClassCommand.x4::Xunit#Sdk#ITestClassCommand#ChooseNextTest(System.Collections.Generic.ICollection{Xunit.Sdk.IMethodInfo})">
            <summary>Sets the stub of ITestClassCommand.ChooseNextTest(ICollection`1&lt;IMethodInfo&gt; testsLeftToRun)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestClassCommand.x4::Xunit#Sdk#ITestClassCommand#ClassFinish">
            <summary>Sets the stub of ITestClassCommand.ClassFinish()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestClassCommand.x4::Xunit#Sdk#ITestClassCommand#ClassStart">
            <summary>Sets the stub of ITestClassCommand.ClassStart()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestClassCommand.x4::Xunit#Sdk#ITestClassCommand#EnumerateTestCommands(Xunit.Sdk.IMethodInfo)">
            <summary>Sets the stub of ITestClassCommand.EnumerateTestCommands(IMethodInfo testMethod)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestClassCommand.x4::Xunit#Sdk#ITestClassCommand#EnumerateTestMethods">
            <summary>Sets the stub of ITestClassCommand.EnumerateTestMethods()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestClassCommand.x4::Xunit#Sdk#ITestClassCommand#IsTestMethod(Xunit.Sdk.IMethodInfo)">
            <summary>Sets the stub of ITestClassCommand.IsTestMethod(IMethodInfo testMethod)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITestClassCommand.x4::Xunit#Sdk#ITestClassCommand#ObjectUnderTest">
            <summary>Sets the stub of ITestClassCommand.get_ObjectUnderTest()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITestClassCommand.x4::Xunit#Sdk#ITestClassCommand#TypeUnderTest">
            <summary>Sets the stub of ITestClassCommand.get_TypeUnderTest()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubITestCommand">
            <summary>Stub type of Xunit.Sdk.ITestCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestCommand.#ctor">
            <summary>Initializes a new instance of type StubITestCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestCommand.DisplayNameGet">
            <summary>Sets the stub of ITestCommand.get_DisplayName()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestCommand.ExecuteObject">
            <summary>Sets the stub of ITestCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestCommand.ShouldCreateInstanceGet">
            <summary>Sets the stub of ITestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestCommand.TimeoutGet">
            <summary>Sets the stub of ITestCommand.get_Timeout()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestCommand.ToStartXml">
            <summary>Sets the stub of ITestCommand.ToStartXml()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestCommand.x4::Xunit#Sdk#ITestCommand#Execute(System.Object)">
            <summary>Sets the stub of ITestCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestCommand.x4::Xunit#Sdk#ITestCommand#ToStartXml">
            <summary>Sets the stub of ITestCommand.ToStartXml()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITestCommand.x4::Xunit#Sdk#ITestCommand#DisplayName">
            <summary>Sets the stub of ITestCommand.get_DisplayName()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITestCommand.x4::Xunit#Sdk#ITestCommand#ShouldCreateInstance">
            <summary>Sets the stub of ITestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITestCommand.x4::Xunit#Sdk#ITestCommand#Timeout">
            <summary>Sets the stub of ITestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubITestResult">
            <summary>Stub type of Xunit.Sdk.ITestResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestResult.#ctor">
            <summary>Initializes a new instance of type StubITestResult</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestResult.ExecutionTimeGet">
            <summary>Sets the stub of ITestResult.get_ExecutionTime()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITestResult.ToXmlXmlNode">
            <summary>Sets the stub of ITestResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITestResult.x4::Xunit#Sdk#ITestResult#ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of ITestResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITestResult.x4::Xunit#Sdk#ITestResult#ExecutionTime">
            <summary>Sets the stub of ITestResult.get_ExecutionTime()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubITypeInfo">
            <summary>Stub type of Xunit.Sdk.ITypeInfo</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITypeInfo.#ctor">
            <summary>Initializes a new instance of type StubITypeInfo</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITypeInfo.GetCustomAttributesType">
            <summary>Sets the stub of ITypeInfo.GetCustomAttributes(Type attributeType)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITypeInfo.GetMethodString">
            <summary>Sets the stub of ITypeInfo.GetMethod(String methodName)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITypeInfo.GetMethods">
            <summary>Sets the stub of ITypeInfo.GetMethods()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITypeInfo.HasAttributeType">
            <summary>Sets the stub of ITypeInfo.HasAttribute(Type attributeType)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITypeInfo.HasInterfaceType">
            <summary>Sets the stub of ITypeInfo.HasInterface(Type interfaceType)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITypeInfo.IsAbstractGet">
            <summary>Sets the stub of ITypeInfo.get_IsAbstract()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITypeInfo.IsSealedGet">
            <summary>Sets the stub of ITypeInfo.get_IsSealed()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubITypeInfo.TypeGet">
            <summary>Sets the stub of ITypeInfo.get_Type()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITypeInfo.x4::Xunit#Sdk#ITypeInfo#GetCustomAttributes(System.Type)">
            <summary>Sets the stub of ITypeInfo.GetCustomAttributes(Type attributeType)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITypeInfo.x4::Xunit#Sdk#ITypeInfo#GetMethod(System.String)">
            <summary>Sets the stub of ITypeInfo.GetMethod(String methodName)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITypeInfo.x4::Xunit#Sdk#ITypeInfo#GetMethods">
            <summary>Sets the stub of ITypeInfo.GetMethods()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITypeInfo.x4::Xunit#Sdk#ITypeInfo#HasAttribute(System.Type)">
            <summary>Sets the stub of ITypeInfo.HasAttribute(Type attributeType)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubITypeInfo.x4::Xunit#Sdk#ITypeInfo#HasInterface(System.Type)">
            <summary>Sets the stub of ITypeInfo.HasInterface(Type interfaceType)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITypeInfo.x4::Xunit#Sdk#ITypeInfo#IsAbstract">
            <summary>Sets the stub of ITypeInfo.get_IsAbstract()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITypeInfo.x4::Xunit#Sdk#ITypeInfo#IsSealed">
            <summary>Sets the stub of ITypeInfo.get_IsSealed()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubITypeInfo.x4::Xunit#Sdk#ITypeInfo#Type">
            <summary>Sets the stub of ITypeInfo.get_Type()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubInRangeException">
            <summary>Stub type of Xunit.Sdk.InRangeException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubInRangeException.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubInRangeException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubInRangeException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubInRangeException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubInRangeException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubInRangeException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubInRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubInRangeException.InitializeStub">
            <summary>Initializes a new instance of type StubInRangeException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.MessageGet">
            <summary>Sets the stub of InRangeException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubInRangeException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubInRangeException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubInRangeException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubInRangeException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubInRangeException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubInRangeException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubInRangeException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubInRangeException.Message">
            <summary>Sets the stub of InRangeException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubInRangeException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubInRangeException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubIsAssignableFromException">
            <summary>Stub type of Xunit.Sdk.IsAssignableFromException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsAssignableFromException.#ctor(System.Type,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsAssignableFromException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubIsAssignableFromException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsAssignableFromException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubIsAssignableFromException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsAssignableFromException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsAssignableFromException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsAssignableFromException.InitializeStub">
            <summary>Initializes a new instance of type StubIsAssignableFromException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsAssignableFromException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsAssignableFromException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsAssignableFromException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsAssignableFromException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsAssignableFromException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsAssignableFromException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsAssignableFromException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsAssignableFromException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsAssignableFromException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsAssignableFromException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubIsNotTypeException">
            <summary>Stub type of Xunit.Sdk.IsNotTypeException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsNotTypeException.#ctor(System.Type,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsNotTypeException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubIsNotTypeException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsNotTypeException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubIsNotTypeException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsNotTypeException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsNotTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsNotTypeException.InitializeStub">
            <summary>Initializes a new instance of type StubIsNotTypeException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsNotTypeException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsNotTypeException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsNotTypeException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsNotTypeException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsNotTypeException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsNotTypeException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsNotTypeException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsNotTypeException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsNotTypeException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsNotTypeException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubIsTypeException">
            <summary>Stub type of Xunit.Sdk.IsTypeException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsTypeException.#ctor(System.Type,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsTypeException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubIsTypeException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsTypeException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubIsTypeException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsTypeException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsTypeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsTypeException.InitializeStub">
            <summary>Initializes a new instance of type StubIsTypeException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubIsTypeException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubIsTypeException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsTypeException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsTypeException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsTypeException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsTypeException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsTypeException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsTypeException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsTypeException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubIsTypeException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubLifetimeCommand">
            <summary>Stub type of Xunit.Sdk.LifetimeCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubLifetimeCommand.#ctor(Xunit.Sdk.ITestCommand,Xunit.Sdk.IMethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubLifetimeCommand.Execute(System.Object)">
            <summary>Sets the stub of LifetimeCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubLifetimeCommand.ExecuteObject">
            <summary>Sets the stub of LifetimeCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubLifetimeCommand.InitializeStub">
            <summary>Initializes a new instance of type StubLifetimeCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubLifetimeCommand.TimeoutGet">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubLifetimeCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubLifetimeCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubLifetimeCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubLifetimeCommand.Timeout">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubMethodResult">
            <summary>Stub type of Xunit.Sdk.MethodResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubMethodResult.#ctor(Xunit.Sdk.IMethodInfo,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubMethodResult.#ctor(System.String,System.String,System.String,Xunit.Sdk.MultiValueDictionary{System.String,System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubMethodResult.InitializeStub">
            <summary>Initializes a new instance of type StubMethodResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubMethodResult.ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of MethodResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubMethodResult.ToXmlXmlNode">
            <summary>Sets the stub of MethodResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubMethodResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubMethodResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubMethodResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubMultiValueDictionary`2">
            <summary>Stub type of Xunit.Sdk.MultiValueDictionary`2</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubMultiValueDictionary`2.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubMultiValueDictionary`2.InitializeStub">
            <summary>Initializes a new instance of type StubMultiValueDictionary</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubMultiValueDictionary`2.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubMultiValueDictionary`2.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubMultiValueDictionary`2.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubNotEmptyException">
            <summary>Stub type of Xunit.Sdk.NotEmptyException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEmptyException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEmptyException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNotEmptyException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEmptyException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNotEmptyException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEmptyException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEmptyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEmptyException.InitializeStub">
            <summary>Initializes a new instance of type StubNotEmptyException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEmptyException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEmptyException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEmptyException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEmptyException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEmptyException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEmptyException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEmptyException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEmptyException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEmptyException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEmptyException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubNotEqualException">
            <summary>Stub type of Xunit.Sdk.NotEqualException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEqualException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEqualException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNotEqualException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEqualException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNotEqualException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEqualException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEqualException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEqualException.InitializeStub">
            <summary>Initializes a new instance of type StubNotEqualException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotEqualException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotEqualException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEqualException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEqualException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEqualException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEqualException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEqualException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEqualException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEqualException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotEqualException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubNotInRangeException">
            <summary>Stub type of Xunit.Sdk.NotInRangeException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotInRangeException.#ctor(System.Object,System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotInRangeException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNotInRangeException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotInRangeException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNotInRangeException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotInRangeException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotInRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotInRangeException.InitializeStub">
            <summary>Initializes a new instance of type StubNotInRangeException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.MessageGet">
            <summary>Sets the stub of NotInRangeException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotInRangeException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotInRangeException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotInRangeException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotInRangeException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotInRangeException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotInRangeException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotInRangeException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotInRangeException.Message">
            <summary>Sets the stub of NotInRangeException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotInRangeException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotInRangeException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubNotNullException">
            <summary>Stub type of Xunit.Sdk.NotNullException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotNullException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotNullException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNotNullException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotNullException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNotNullException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotNullException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotNullException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotNullException.InitializeStub">
            <summary>Initializes a new instance of type StubNotNullException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotNullException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotNullException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotNullException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotNullException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotNullException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotNullException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotNullException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotNullException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotNullException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotNullException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubNotSameException">
            <summary>Stub type of Xunit.Sdk.NotSameException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotSameException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotSameException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNotSameException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotSameException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNotSameException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotSameException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotSameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotSameException.InitializeStub">
            <summary>Initializes a new instance of type StubNotSameException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNotSameException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNotSameException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotSameException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotSameException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotSameException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotSameException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotSameException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotSameException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotSameException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNotSameException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubNullException">
            <summary>Stub type of Xunit.Sdk.NullException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNullException.#ctor(System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNullException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNullException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNullException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNullException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNullException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNullException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNullException.InitializeStub">
            <summary>Initializes a new instance of type StubNullException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubNullException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubNullException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNullException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNullException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNullException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNullException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNullException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNullException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNullException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubNullException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubParamterCountMismatchException">
            <summary>Stub type of Xunit.Sdk.ParamterCountMismatchException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubParamterCountMismatchException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubParamterCountMismatchException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubParamterCountMismatchException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubParamterCountMismatchException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubParamterCountMismatchException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubParamterCountMismatchException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubParamterCountMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubParamterCountMismatchException.InitializeStub">
            <summary>Initializes a new instance of type StubParamterCountMismatchException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubParamterCountMismatchException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubParamterCountMismatchException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubParamterCountMismatchException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubParamterCountMismatchException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubParamterCountMismatchException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubParamterCountMismatchException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubParamterCountMismatchException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubParamterCountMismatchException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubParamterCountMismatchException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubParamterCountMismatchException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubPassedResult">
            <summary>Stub type of Xunit.Sdk.PassedResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubPassedResult.#ctor(Xunit.Sdk.IMethodInfo,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubPassedResult.#ctor(System.String,System.String,System.String,Xunit.Sdk.MultiValueDictionary{System.String,System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubPassedResult.InitializeStub">
            <summary>Initializes a new instance of type StubPassedResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubPassedResult.ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of PassedResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubPassedResult.ToXmlXmlNode">
            <summary>Sets the stub of PassedResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubPassedResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubPassedResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubPassedResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubSameException">
            <summary>Stub type of Xunit.Sdk.SameException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSameException.#ctor(System.Object,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSameException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSameException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSameException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSameException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSameException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSameException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSameException.InitializeStub">
            <summary>Initializes a new instance of type StubSameException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSameException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSameException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSameException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSameException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSameException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSameException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSameException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSameException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSameException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSameException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubSingleException">
            <summary>Stub type of Xunit.Sdk.SingleException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSingleException.#ctor(System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSingleException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubSingleException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSingleException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubSingleException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSingleException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSingleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSingleException.InitializeStub">
            <summary>Initializes a new instance of type StubSingleException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSingleException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSingleException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSingleException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSingleException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSingleException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSingleException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSingleException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSingleException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSingleException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSingleException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubSkipCommand">
            <summary>Stub type of Xunit.Sdk.SkipCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipCommand.#ctor(Xunit.Sdk.IMethodInfo,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipCommand.AttachBackingFieldToTimeout">
            <summary>Attaches delegates to emulate StubSkipCommand.Timeout as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipCommand.Execute(System.Object)">
            <summary>Sets the stub of SkipCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSkipCommand.ExecuteObject">
            <summary>Sets the stub of SkipCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipCommand.InitializeStub">
            <summary>Initializes a new instance of type StubSkipCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSkipCommand.ShouldCreateInstanceGet">
            <summary>Sets the stub of SkipCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSkipCommand.TimeoutGet">
            <summary>Sets the stub of TestCommand.get_Timeout()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSkipCommand.TimeoutSetInt32">
            <summary>Sets the stub of TestCommand.set_Timeout(Int32 value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipCommand.ToStartXml">
            <summary>Sets the stub of SkipCommand.ToStartXml()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSkipCommand.ToStartXml01">
            <summary>Sets the stub of SkipCommand.ToStartXml()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSkipCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSkipCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSkipCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSkipCommand.ShouldCreateInstance">
            <summary>Sets the stub of SkipCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSkipCommand.Timeout">
            <summary>Sets the stub of TestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubSkipResult">
            <summary>Stub type of Xunit.Sdk.SkipResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipResult.#ctor(Xunit.Sdk.IMethodInfo,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipResult.#ctor(System.String,System.String,System.String,Xunit.Sdk.MultiValueDictionary{System.String,System.String},System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipResult.InitializeStub">
            <summary>Initializes a new instance of type StubSkipResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubSkipResult.ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of SkipResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubSkipResult.ToXmlXmlNode">
            <summary>Sets the stub of SkipResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSkipResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSkipResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubSkipResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTestClassCommand">
            <summary>Stub type of Xunit.Sdk.TestClassCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestClassCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestClassCommand.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestClassCommand.#ctor(Xunit.Sdk.ITypeInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestClassCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTestClassCommand</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestClassCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestClassCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestClassCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTestClassCommandFactory">
            <summary>Stub type of Xunit.Sdk.TestClassCommandFactory</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestClassCommandFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestClassCommandFactory.InitializeStub">
            <summary>Initializes a new instance of type StubTestClassCommandFactory</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestClassCommandFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestClassCommandFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestClassCommandFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTestCommand">
            <summary>Stub type of Xunit.Sdk.TestCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestCommand.#ctor(Xunit.Sdk.IMethodInfo,System.String,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestCommand.AttachBackingFieldToTimeout">
            <summary>Attaches delegates to emulate StubTestCommand.Timeout as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestCommand.Execute(System.Object)">
            <summary>Sets the stub of TestCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTestCommand.ExecuteObject">
            <summary>Sets the stub of TestCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTestCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTestCommand.ShouldCreateInstanceGet">
            <summary>Sets the stub of TestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTestCommand.TimeoutGet">
            <summary>Sets the stub of TestCommand.get_Timeout()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTestCommand.TimeoutSetInt32">
            <summary>Sets the stub of TestCommand.set_Timeout(Int32 value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestCommand.ToStartXml">
            <summary>Sets the stub of TestCommand.ToStartXml()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTestCommand.ToStartXml01">
            <summary>Sets the stub of TestCommand.ToStartXml()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestCommand.ShouldCreateInstance">
            <summary>Sets the stub of TestCommand.get_ShouldCreateInstance()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestCommand.Timeout">
            <summary>Sets the stub of TestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTestResult">
            <summary>Stub type of Xunit.Sdk.TestResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestResult.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestResult.InitializeStub">
            <summary>Initializes a new instance of type StubTestResult</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestResult.ToXml(Xunit.XmlNode)">
            <summary>Sets the stub of TestResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTestResult.ToXmlXmlNode">
            <summary>Sets the stub of TestResult.ToXml(XmlNode parentNode)</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestResult.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestResult.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestResult.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTestTimer">
            <summary>Stub type of Xunit.Sdk.TestTimer</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestTimer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTestTimer.InitializeStub">
            <summary>Initializes a new instance of type StubTestTimer</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestTimer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestTimer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTestTimer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubThrowsException">
            <summary>Stub type of Xunit.Sdk.ThrowsException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubThrowsException.#ctor(System.Type)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubThrowsException.#ctor(System.Type,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubThrowsException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubThrowsException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubThrowsException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubThrowsException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubThrowsException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubThrowsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubThrowsException.InitializeStub">
            <summary>Initializes a new instance of type StubThrowsException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.MessageGet">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.StackTraceGet">
            <summary>Sets the stub of ThrowsException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubThrowsException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubThrowsException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubThrowsException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubThrowsException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubThrowsException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubThrowsException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubThrowsException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubThrowsException.Message">
            <summary>Sets the stub of AssertActualExpectedException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubThrowsException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubThrowsException.StackTrace">
            <summary>Sets the stub of ThrowsException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTimedCommand">
            <summary>Stub type of Xunit.Sdk.TimedCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimedCommand.#ctor(Xunit.Sdk.ITestCommand)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimedCommand.Execute(System.Object)">
            <summary>Sets the stub of TimedCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimedCommand.ExecuteObject">
            <summary>Sets the stub of TimedCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimedCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTimedCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimedCommand.TimeoutGet">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimedCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimedCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimedCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimedCommand.Timeout">
            <summary>Sets the stub of DelegatingTestCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTimeoutCommand">
            <summary>Stub type of Xunit.Sdk.TimeoutCommand</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutCommand.#ctor(Xunit.Sdk.ITestCommand,System.Int32,Xunit.Sdk.IMethodInfo)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutCommand.Execute(System.Object)">
            <summary>Sets the stub of TimeoutCommand.Execute(Object testClass)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutCommand.ExecuteObject">
            <summary>Sets the stub of TimeoutCommand.Execute(Object testClass)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutCommand.InitializeStub">
            <summary>Initializes a new instance of type StubTimeoutCommand</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutCommand.TimeoutGet">
            <summary>Sets the stub of TimeoutCommand.get_Timeout()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutCommand.Timeout">
            <summary>Sets the stub of TimeoutCommand.get_Timeout()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTimeoutException">
            <summary>Stub type of Xunit.Sdk.TimeoutException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutException.#ctor(System.Int64)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTimeoutException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTimeoutException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutException.InitializeStub">
            <summary>Initializes a new instance of type StubTimeoutException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTimeoutException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTimeoutException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTimeoutException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTraceAssertException">
            <summary>Stub type of Xunit.Sdk.TraceAssertException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTraceAssertException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTraceAssertException.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTraceAssertException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTraceAssertException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTraceAssertException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTraceAssertException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTraceAssertException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTraceAssertException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTraceAssertException.InitializeStub">
            <summary>Initializes a new instance of type StubTraceAssertException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.MessageGet">
            <summary>Sets the stub of TraceAssertException.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTraceAssertException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTraceAssertException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTraceAssertException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTraceAssertException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTraceAssertException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTraceAssertException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTraceAssertException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTraceAssertException.Message">
            <summary>Sets the stub of TraceAssertException.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTraceAssertException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTraceAssertException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubTrueException">
            <summary>Stub type of Xunit.Sdk.TrueException</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTrueException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTrueException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubTrueException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTrueException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubTrueException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTrueException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTrueException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTrueException.InitializeStub">
            <summary>Initializes a new instance of type StubTrueException</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.StackTraceGet">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubTrueException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Xunit.Sdk.Fakes.StubTrueException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTrueException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTrueException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTrueException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTrueException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTrueException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTrueException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTrueException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubTrueException.StackTrace">
            <summary>Sets the stub of AssertException.get_StackTrace()</summary>
        </member>
        <member name="T:Xunit.Sdk.Fakes.StubXmlUtility">
            <summary>Stub type of Xunit.Sdk.XmlUtility</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubXmlUtility.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Xunit.Sdk.Fakes.StubXmlUtility.InitializeStub">
            <summary>Initializes a new instance of type StubXmlUtility</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubXmlUtility.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubXmlUtility.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Xunit.Sdk.Fakes.StubXmlUtility.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
