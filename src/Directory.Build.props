<Project>
  <PropertyGroup>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <Platform>AnyCPU</Platform>
    <IsTestProject>$(MSBuildProjectName.Contains('Tests'))</IsTestProject>
    <DebugType>embedded</DebugType>
    <Authors>.NET Foundation and Contributors</Authors>
    <Copyright>Copyright (c) .NET Foundation and Contributors</Copyright>
    <PackageIcon>logo.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://reactiveui.net</PackageProjectUrl>
    <DefaultPackageDescription>A MVVM framework that integrates with the Reactive Extensions for .NET to create elegant, testable User Interfaces that run on any mobile or desktop platform. Supports Xamarin.iOS, Xamarin.Android, Xamarin.Mac, Xamarin Forms, Xamarin.TVOS, Tizen, WPF, Windows Forms, Universal Windows Platform (UWP) and the Uno Platform.</DefaultPackageDescription>
    <PackageDescription>$(DefaultPackageDescription)</PackageDescription>
    <Owners>anaisbetts;ghuntley</Owners>
    <PackageTags>mvvm;reactiveui;rx;reactive extensions;observable;LINQ;events;frp;xamarin;android;ios;mac;forms;monodroid;monotouch;xamarin.android;xamarin.ios;xamarin.forms;xamarin.mac;xamarin.tvos;wpf;net;netstandard;net462;winui;maui;tizen;unoplatform</PackageTags>
    <PackageReleaseNotes>https://github.com/reactiveui/ReactiveUI/releases</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/reactiveui/reactiveui</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <NoWarn>$(NoWarn);IDE0060;IDE1006;IDE0130;VSSpell001;CA1510</NoWarn>
    <!-- Publish the repository URL in the built .nupkg (in the NuSpec <Repository> element) -->

    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <!-- Embed source files that are not tracked by the source control manager in the PDB -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>

    <!-- Include PDB in the built .nupkg -->
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
    <Nullable>enable</Nullable>
    <LangVersion>preview</LangVersion>
    <EnableNETAnalyzers>True</EnableNETAnalyzers>
    <AnalysisLevel>latest</AnalysisLevel>
    <WarningsAsErrors>nullable</WarningsAsErrors>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <IncludePackageReferencesDuringMarkupCompilation>true</IncludePackageReferencesDuringMarkupCompilation>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>

    <!-- Enable building Windows-specific targets on non-Windows platforms -->
    <EnableWindowsTargeting>true</EnableWindowsTargeting>
  </PropertyGroup>
  
  <PropertyGroup>
    <!-- Granular Target Framework definitions for cross-platform builds -->
    <ReactiveUICoreTargets>net8.0;net9.0;net10.0</ReactiveUICoreTargets>

    <!-- Platform-specific targets - always defined but only used on supported platforms -->
    <ReactiveUIFrameworkTargets Condition="'$([MSBuild]::IsOsPlatform('Windows'))' == 'true'">net462;net472</ReactiveUIFrameworkTargets>
    <ReactiveUIMauiWindowsTargets>net9.0-windows10.0.19041.0;net10.0-windows10.0.19041.0</ReactiveUIMauiWindowsTargets>
    <ReactiveUIWindowsTargets>net8.0-windows10.0.19041.0;net9.0-windows10.0.19041.0;net10.0-windows10.0.19041.0</ReactiveUIWindowsTargets>
    <ReactiveUIWinUITargets>net8.0-windows10.0.19041.0;net9.0-windows10.0.19041.0;net10.0-windows10.0.19041.0</ReactiveUIWinUITargets>
    <ReactiveUIAppleTargets>net9.0-ios;net9.0-tvos;net9.0-macos;net9.0-maccatalyst;net10.0-ios;net10.0-tvos;net10.0-macos;net10.0-maccatalyst</ReactiveUIAppleTargets>
    <ReactiveUIAndroidTargets>net9.0-android;net10.0-android</ReactiveUIAndroidTargets>

    <!-- Windows-only targets (combines Framework + Windows targets) - conditioned -->
    <ReactiveUIWindowsOnlyTargets>$(ReactiveUIWindowsTargets)</ReactiveUIWindowsOnlyTargets>
    <ReactiveUIWindowsOnlyTargets Condition="'$([MSBuild]::IsOsPlatform('Windows'))' == 'true'">$(ReactiveUIFrameworkTargets);$(ReactiveUIWindowsTargets)</ReactiveUIWindowsOnlyTargets>

    <ReactiveUITestTargets>net9.0;net10.0</ReactiveUITestTargets>
    <ReactiveUITestTargets Condition="'$([MSBuild]::IsOsPlatform('Windows'))' == 'true'">net9.0-windows10.0.19041.0;net10.0-windows10.0.19041.0;net472</ReactiveUITestTargets>

    <ReactiveUIMauiTestTargets>net9.0;net10.0</ReactiveUIMauiTestTargets>
    <ReactiveUIMauiTestTargets Condition="'$([MSBuild]::IsOsPlatform('Windows'))' == 'true'">net9.0-windows10.0.19041.0;net10.0-windows10.0.19041.0</ReactiveUIMauiTestTargets>

    <ReactiveMauiTargets>net9.0;net10.0;$(ReactiveUIAndroidTargets)</ReactiveMauiTargets>
    <ReactiveMauiTargets Condition="$([MSBuild]::IsOsPlatform('Windows')) or $([MSBuild]::IsOsPlatform('OSX'))">$(ReactiveMauiTargets);$(ReactiveUIAppleTargets)</ReactiveMauiTargets>

    <!-- Modern targets for tests and benchmarks (no netstandard) -->
    <ReactiveUIModernTargets>net8.0;net9.0;net10.0</ReactiveUIModernTargets>

    <!-- Start with core targets available on all platforms -->
    <ReactiveUIFinalTargetFrameworks>netstandard2.0;$(ReactiveUICoreTargets)</ReactiveUIFinalTargetFrameworks>

    <!-- Add Android targets (available on all platforms with Android SDK) -->
    <ReactiveUIFinalTargetFrameworks>$(ReactiveUIFinalTargetFrameworks);$(ReactiveUIAndroidTargets)</ReactiveUIFinalTargetFrameworks>

    <!-- Add Windows-specific targets (.NET Framework and Windows-specific TFMs) on Windows -->
    <ReactiveUIFinalTargetFrameworks Condition="$([MSBuild]::IsOsPlatform('Windows'))">$(ReactiveUIFinalTargetFrameworks);$(ReactiveUIFrameworkTargets);$(ReactiveUIWindowsTargets)</ReactiveUIFinalTargetFrameworks>

    <!-- Add Apple targets on macOS and Windows -->
    <ReactiveUIFinalTargetFrameworks Condition="$([MSBuild]::IsOsPlatform('Windows')) or $([MSBuild]::IsOsPlatform('OSX'))">$(ReactiveUIFinalTargetFrameworks);$(ReactiveUIAppleTargets)</ReactiveUIFinalTargetFrameworks>

    <!-- Final target frameworks for tests/benchmarks (modern .NET only, with platform-specific additions) -->
    <ReactiveUIFinalModernTargetFrameworks>$(ReactiveUIModernTargets)</ReactiveUIFinalModernTargetFrameworks>
    <ReactiveUIFinalModernTargetFrameworks Condition="$([MSBuild]::IsOsPlatform('Windows'))">$(ReactiveUIFrameworkTargets);$(ReactiveUIWindowsTargets)</ReactiveUIFinalModernTargetFrameworks>
  </PropertyGroup>
  
  <PropertyGroup>
    <!-- Ensure all test runs use our runsettings to control cross-assembly parallelism -->
    <RunSettingsFilePath>$(MSBuildThisFileDirectory)tests.runsettings</RunSettingsFilePath>
  </PropertyGroup>
  
  <PropertyGroup Condition="$(MSBuildProjectName.Contains('WPF')) != 'true' and '$(IsTestProject)' != 'true' and ($(TargetFramework.StartsWith('net8.0')) or $(TargetFramework.StartsWith('net9.0')) or $(TargetFramework.StartsWith('net10.0')))">
    <IsAotCompatible>true</IsAotCompatible>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
    <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
  </PropertyGroup>
  
  <ItemGroup Condition="$(IsTestProject)">
    <PackageReference Include="NUnit"/>
    <PackageReference Include="NUnit3TestAdapter"/>
    <PackageReference Include="NUnit.Analyzers"/>
    <PackageReference Include="Microsoft.NET.Test.Sdk"/>
    <PackageReference Include="Microsoft.Reactive.Testing"/>
    <PackageReference Include="PublicApiGenerator"/>
    <PackageReference Include="coverlet.msbuild" PrivateAssets="All"/>
    <PackageReference Include="Verify.NUnit"/>
  </ItemGroup>
  
  <ItemGroup Condition="'$(IsTestProject)' != 'true'">
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All"/>
  </ItemGroup>
  <PropertyGroup>
    <SolutionDir Condition="'$(SolutionDir)' == ''">$(MSBuildThisFileDirectory)</SolutionDir>
  </PropertyGroup>
  <ItemGroup>
    <None Include="$(MSBuildThisFileDirectory)..\images\logo.png" Pack="true" PackagePath="\"/>
    <None Include="$(MSBuildThisFileDirectory)..\LICENSE" Pack="true" PackagePath="LICENSE"/>
    <None Include="$(MSBuildThisFileDirectory)..\README.md" Pack="true" PackagePath="\"/>
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Nerdbank.GitVersioning" PrivateAssets="all"/>
    <PackageReference Include="stylecop.analyzers" PrivateAssets="all"/>
    <PackageReference Include="Roslynator.Analyzers" PrivateAssets="All"/>
  </ItemGroup>
  <ItemGroup>
    <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" Link="stylecop.json"/>
  </ItemGroup>
</Project>
