[assembly: System.Runtime.Versioning.SupportedOSPlatform("Windows10.0.17763.0")]
[assembly: System.Runtime.Versioning.TargetFramework(".NETCoreApp,Version=v9.0", FrameworkDisplayName=".NET 9.0")]
[assembly: System.Runtime.Versioning.TargetPlatform("Windows10.0.17763.0")]
namespace ReactiveUI.Winforms
{
    public class ActivationForViewFetcher : ReactiveUI.IActivationForViewFetcher, Splat.IEnableLogger
    {
        public ActivationForViewFetcher() { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("GetActivationForView uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("GetActivationForView uses methods that may require unreferenced code")]
        public System.IObservable<bool> GetActivationForView(ReactiveUI.IActivatableView view) { }
        public int GetAffinityForView(System.Type view) { }
    }
    public class ContentControlBindingHook : ReactiveUI.IPropertyBindingHook
    {
        public ContentControlBindingHook() { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("ExecuteHook uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("ExecuteHook uses methods that may require unreferenced code")]
        public bool ExecuteHook(object? source, object target, System.Func<ReactiveUI.IObservedChange<object, object>[]> getCurrentViewModelProperties, System.Func<ReactiveUI.IObservedChange<object, object>[]> getCurrentViewProperties, ReactiveUI.BindingDirection direction) { }
    }
    public class CreatesWinformsCommandBinding : ReactiveUI.ICreatesCommandBinding
    {
        public CreatesWinformsCommandBinding() { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("GetAffinityForObject uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("GetAffinityForObject uses methods that may require unreferenced code")]
        public System.IDisposable? BindCommandToObject(System.Windows.Input.ICommand? command, object? target, System.IObservable<object?> commandParameter) { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("GetAffinityForObject uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("GetAffinityForObject uses methods that may require unreferenced code")]
        public System.IDisposable? BindCommandToObject<TEventArgs>(System.Windows.Input.ICommand? command, object? target, System.IObservable<object?> commandParameter, string eventName) { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("GetAffinityForObject uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("GetAffinityForObject uses methods that may require unreferenced code")]
        public int GetAffinityForObject(System.Type type, bool hasEventTarget) { }
    }
    public class PanelSetMethodBindingConverter : ReactiveUI.ISetMethodBindingConverter, Splat.IEnableLogger
    {
        public PanelSetMethodBindingConverter() { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("GetAffinityForObjects uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("GetAffinityForObjects uses methods that may require unreferenced code")]
        public int GetAffinityForObjects(System.Type? fromType, System.Type? toType) { }
        public object PerformSet(object? toTarget, object? newValue, object?[]? arguments) { }
    }
    public class PlatformOperations : ReactiveUI.IPlatformOperations
    {
        public PlatformOperations() { }
        public string? GetOrientation() { }
    }
    public static class ReactiveUIBuilderWinFormsExtensions
    {
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("WithWinForms uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("WithWinForms uses methods that may require unreferenced code")]
        public static Splat.Builder.AppBuilder WithWinForms(this ReactiveUI.Builder.ReactiveUIBuilder builder) { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("WithWinForms uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("WithWinForms uses methods that may require unreferenced code")]
        public static Splat.Builder.AppBuilder WithWinForms(this Splat.Builder.AppBuilder builder) { }
    }
    public class ReactiveUserControlNonGeneric : System.Windows.Forms.UserControl, ReactiveUI.IActivatableView, ReactiveUI.IViewFor
    {
        public ReactiveUserControlNonGeneric() { }
        protected override void Dispose(bool disposing) { }
    }
    [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("ReactiveUserControl<TViewModel> provides base functionality for ReactiveUI which " +
        "may require dynamic code generation")]
    [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("ReactiveUserControl<TViewModel> provides base functionality for ReactiveUI which " +
        "may require unreferenced code")]
    public class ReactiveUserControl<TViewModel> : System.Windows.Forms.UserControl, ReactiveUI.IActivatableView, ReactiveUI.IViewFor, ReactiveUI.IViewFor<TViewModel>
        where TViewModel :  class
    {
        public ReactiveUserControl() { }
        [System.ComponentModel.Bindable(true)]
        [System.ComponentModel.Category("ReactiveUI")]
        [System.ComponentModel.Description("The ViewModel.")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public TViewModel ViewModel { get; set; }
        protected override void Dispose(bool disposing) { }
    }
    public class Registrations
    {
        public Registrations() { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("Register uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("Register uses methods that may require unreferenced code")]
        public void Register(System.Action<System.Func<object>, System.Type> registerFunction) { }
    }
    [System.ComponentModel.DefaultProperty("ViewModel")]
    [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("RoutedControlHost uses methods that require dynamic code generation")]
    [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("RoutedControlHost uses methods that may require unreferenced code")]
    public class RoutedControlHost : System.Windows.Forms.UserControl, ReactiveUI.IReactiveObject, Splat.IEnableLogger, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging
    {
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("RoutedControlHost uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("RoutedControlHost uses methods that may require unreferenced code")]
        public RoutedControlHost() { }
        [System.ComponentModel.Category("ReactiveUI")]
        [System.ComponentModel.Description("The default control when no viewmodel is specified")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public System.Windows.Forms.Control? DefaultContent { get; set; }
        [System.ComponentModel.Category("ReactiveUI")]
        [System.ComponentModel.Description("The router.")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReactiveUI.RoutingState? Router { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public System.IObservable<string>? ViewContractObservable { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReactiveUI.IViewLocator? ViewLocator { get; set; }
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler? PropertyChanging;
        protected override void Dispose(bool disposing) { }
    }
    public class TableContentSetMethodBindingConverter : ReactiveUI.ISetMethodBindingConverter, Splat.IEnableLogger
    {
        public TableContentSetMethodBindingConverter() { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("GetAffinityForObjects uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("GetAffinityForObjects uses methods that may require unreferenced code")]
        public int GetAffinityForObjects(System.Type? fromType, System.Type? toType) { }
        public object PerformSet(object? toTarget, object? newValue, object?[]? arguments) { }
    }
    [System.ComponentModel.DefaultProperty("ViewModel")]
    [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("ViewModelControlHost uses methods that require dynamic code generation")]
    [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("ViewModelControlHost uses methods that may require unreferenced code")]
    public class ViewModelControlHost : System.Windows.Forms.UserControl, ReactiveUI.IActivatableView, ReactiveUI.IReactiveObject, ReactiveUI.IViewFor, Splat.IEnableLogger, System.ComponentModel.INotifyPropertyChanged, System.ComponentModel.INotifyPropertyChanging
    {
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("ViewModelControlHost uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("ViewModelControlHost uses methods that may require unreferenced code")]
        public ViewModelControlHost() { }
        [System.ComponentModel.Bindable(true)]
        [System.ComponentModel.Category("ReactiveUI")]
        [System.ComponentModel.DefaultValue(true)]
        [System.ComponentModel.Description("Cache Views")]
        public bool CacheViews { get; set; }
        [System.ComponentModel.Bindable(true)]
        [System.ComponentModel.Category("ReactiveUI")]
        [System.ComponentModel.Description("The Current View")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public object? Content { get; protected set; }
        public System.Windows.Forms.Control? CurrentView { get; }
        [System.ComponentModel.Category("ReactiveUI")]
        [System.ComponentModel.Description("The default control when no viewmodel is specified")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public System.Windows.Forms.Control? DefaultContent { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public System.IObservable<string>? ViewContractObservable { get; set; }
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ReactiveUI.IViewLocator? ViewLocator { get; set; }
        [System.ComponentModel.Bindable(true)]
        [System.ComponentModel.Category("ReactiveUI")]
        [System.ComponentModel.Description("The viewmodel to host.")]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public object? ViewModel { get; set; }
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public static bool DefaultCacheViewsEnabled { get; set; }
        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;
        public event System.ComponentModel.PropertyChangingEventHandler? PropertyChanging;
        protected override void Dispose(bool disposing) { }
    }
    [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("WinformsCreatesObservableForProperty uses methods that require dynamic code gener" +
        "ation")]
    [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("WinformsCreatesObservableForProperty uses methods that may require unreferenced c" +
        "ode")]
    public class WinformsCreatesObservableForProperty : ReactiveUI.ICreatesObservableForProperty, Splat.IEnableLogger
    {
        public WinformsCreatesObservableForProperty() { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("GetAffinityForObject uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("GetAffinityForObject uses methods that may require unreferenced code")]
        public int GetAffinityForObject(System.Type type, string propertyName, bool beforeChanged = false) { }
        [System.Diagnostics.CodeAnalysis.RequiresDynamicCode("GetNotificationForProperty uses methods that require dynamic code generation")]
        [System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("GetNotificationForProperty uses methods that may require unreferenced code")]
        public System.IObservable<ReactiveUI.IObservedChange<object, object?>> GetNotificationForProperty(object sender, System.Linq.Expressions.Expression expression, string propertyName, bool beforeChanged = false, bool suppressWarnings = false) { }
    }
}