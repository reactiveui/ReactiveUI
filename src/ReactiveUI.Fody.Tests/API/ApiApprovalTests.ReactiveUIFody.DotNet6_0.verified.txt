[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("ReactiveUI.AndroidSupport")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("ReactiveUI.Tests")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("ReactiveUI.Winforms")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("ReactiveUI.Wpf")]
[assembly: System.Runtime.CompilerServices.InternalsVisibleTo("ReactiveUI.XamForms")]
[assembly: System.Runtime.Versioning.TargetFramework(".NETCoreApp,Version=v6.0", FrameworkDisplayName=".NET 6.0")]
namespace ReactiveUI.Fody.Helpers
{
    [System.AttributeUsage(System.AttributeTargets.Method | System.AttributeTargets.Property)]
    public sealed class ObservableAsPropertyAttribute : System.Attribute
    {
        public ObservableAsPropertyAttribute() { }
    }
    public static class ObservableAsPropertyExtensions
    {
        public static ReactiveUI.ObservableAsPropertyHelper<TRet> ToPropertyEx<TObj, TRet>(this System.IObservable<TRet> item, TObj source, System.Linq.Expressions.Expression<System.Func<TObj, TRet>> property, bool deferSubscription = false, System.Reactive.Concurrency.IScheduler? scheduler = null)
            where TObj : ReactiveUI.ReactiveObject { }
        public static ReactiveUI.ObservableAsPropertyHelper<TRet> ToPropertyEx<TObj, TRet>(this System.IObservable<TRet> item, TObj source, System.Linq.Expressions.Expression<System.Func<TObj, TRet>> property, TRet initialValue, bool deferSubscription = false, System.Reactive.Concurrency.IScheduler? scheduler = null)
            where TObj : ReactiveUI.ReactiveObject { }
    }
    [System.AttributeUsage(System.AttributeTargets.Property)]
    public sealed class ReactiveAttribute : System.Attribute
    {
        public ReactiveAttribute() { }
    }
    [System.AttributeUsage(System.AttributeTargets.Property)]
    public sealed class ReactiveDependencyAttribute : System.Attribute
    {
        public ReactiveDependencyAttribute(string targetName) { }
        public string Target { get; }
        public string? TargetProperty { get; set; }
    }
}